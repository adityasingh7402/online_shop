[{"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\about.js":"1","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\hello.js":"2","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\checkout.js":"3","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\componenat\\Footer.js":"4","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\componenat\\Navbar.js":"5","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\contact.js":"6","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\index.js":"7","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\login.js":"8","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\order.js":"9","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\products\\[slug].js":"10","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\Vegitables.js":"11","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\_app.js":"12","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\shop.js":"13","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\pincode.js":"14","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\preview.js":"15","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\addproducts.js":"16","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\getproducts.js":"17","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\updateproducts.js":"18","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\forget.js":"19","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\signup.js":"20","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\account.js":"21","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\getuser.js":"22","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\login.js":"23","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\myorders.js":"24","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\posttransaction.js":"25","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\pretransaction.js":"26","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\signup.js":"27","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\updatepassword.js":"28","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\updateuser.js":"29","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\Fruits.js":"30","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\yourorder.js":"31","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\componenat\\Header.js":"32","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\addcoupon.js":"33","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\addproduct.js":"34","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\coupons.js":"35","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\index.js":"36","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\order.js":"37","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\products.js":"38","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\updateproduct.js":"39","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\addquery.js":"40","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\getorder.js":"41","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\search.js":"42"},{"size":769,"mtime":1658916454952,"results":"43","hashOfConfig":"44"},{"size":170,"mtime":1656932259863,"results":"45","hashOfConfig":"44"},{"size":19214,"mtime":1662371630286,"results":"46","hashOfConfig":"44"},{"size":5854,"mtime":1658401015730,"results":"47","hashOfConfig":"44"},{"size":4025,"mtime":1658063693871,"results":"48","hashOfConfig":"44"},{"size":5517,"mtime":1662371565102,"results":"49","hashOfConfig":"44"},{"size":8107,"mtime":1658918439558,"results":"50","hashOfConfig":"44"},{"size":5280,"mtime":1662371678987,"results":"51","hashOfConfig":"44"},{"size":5753,"mtime":1659012670055,"results":"52","hashOfConfig":"44"},{"size":7556,"mtime":1659454725600,"results":"53","hashOfConfig":"44"},{"size":3684,"mtime":1658917187989,"results":"54","hashOfConfig":"44"},{"size":9664,"mtime":1662376426578,"results":"55","hashOfConfig":"44"},{"size":3691,"mtime":1662382814523,"results":"56","hashOfConfig":"44"},{"size":153,"mtime":1657895840413,"results":"57","hashOfConfig":"44"},{"size":5267,"mtime":1659455070485,"results":"58","hashOfConfig":"44"},{"size":838,"mtime":1662657031450,"results":"59","hashOfConfig":"44"},{"size":290,"mtime":1656159695019,"results":"60","hashOfConfig":"44"},{"size":533,"mtime":1662657336022,"results":"61","hashOfConfig":"44"},{"size":2081,"mtime":1659004927188,"results":"62","hashOfConfig":"44"},{"size":6085,"mtime":1662641699252,"results":"63","hashOfConfig":"44"},{"size":14048,"mtime":1662371635112,"results":"64","hashOfConfig":"44"},{"size":683,"mtime":1657974927104,"results":"65","hashOfConfig":"44"},{"size":1335,"mtime":1659775614668,"results":"66","hashOfConfig":"44"},{"size":434,"mtime":1657812958488,"results":"67","hashOfConfig":"44"},{"size":1697,"mtime":1658478427642,"results":"68","hashOfConfig":"44"},{"size":4513,"mtime":1657896182289,"results":"69","hashOfConfig":"44"},{"size":589,"mtime":1658836399123,"results":"70","hashOfConfig":"44"},{"size":1106,"mtime":1658140934358,"results":"71","hashOfConfig":"44"},{"size":837,"mtime":1657975010857,"results":"72","hashOfConfig":"44"},{"size":3671,"mtime":1659007180570,"results":"73","hashOfConfig":"44"},{"size":3757,"mtime":1662371711141,"results":"74","hashOfConfig":"44"},{"size":8614,"mtime":1659428270790,"results":"75","hashOfConfig":"44"},{"size":299,"mtime":1662381725739,"results":"76","hashOfConfig":"44"},{"size":9211,"mtime":1662892711140,"results":"77","hashOfConfig":"44"},{"size":291,"mtime":1662381713063,"results":"78","hashOfConfig":"44"},{"size":4102,"mtime":1662460357006,"results":"79","hashOfConfig":"44"},{"size":2626,"mtime":1662459717326,"results":"80","hashOfConfig":"44"},{"size":2769,"mtime":1662460953982,"results":"81","hashOfConfig":"44"},{"size":311,"mtime":1662381659656,"results":"82","hashOfConfig":"44"},{"size":566,"mtime":1658206238700,"results":"83","hashOfConfig":"44"},{"size":278,"mtime":1662380688395,"results":"84","hashOfConfig":"44"},{"size":4960,"mtime":1662372275905,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"u6jv1p",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\about.js",["232"],[],"\r\nimport React from \"react\";\r\nimport Head from \"next/head\";\r\nimport Image from \"next/image\";\r\n\r\nconst about = () => {\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Fresh Frveg - About</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className=\"maxH overflow-hidden relative\">\r\n        <div className=\"w-auto blurC z-0\">\r\n          <Image src=\"/V3.jpg\" width={1520} height={860} />\r\n        </div>\r\n          <p className=\"text-9xl headingT absolute top-1/3 flex justify-center items-center w-full z-20 drop-shadow-md text-white pr-2\">About Us</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default about;\r\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\hello.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\checkout.js",["233","234","235"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Head from \"next/head\";\r\nimport Script from \"next/script\"\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Checkout = ({ cart, addToCart, removeFromCart, clearCart, subTotal, toggleCart, deleteFromCart }) => {\r\n    const [name, setname] = useState(\"\")\r\n    const [phone, setphone] = useState(\"\")\r\n    const [pincode, setpincode] = useState(\"\")\r\n    const [address, setaddress] = useState(\"\")\r\n    const [landmark, setlandmark] = useState(\"\")\r\n    const [alphone, setalphone] = useState(\"\")\r\n    const [email, setemail] = useState(\"\")\r\n    const [city, setcity] = useState(\"\")\r\n    const [state, setstate] = useState(\"\")\r\n    const [disabled, setdisabled] = useState(true)\r\n    const [user, setuser] = useState({ value: null })\r\n    const [mobilevalid, setmobilevalid] = useState(true)\r\n    const [validpincode, setvalidpincode] = useState(true)\r\n    const [lodingS, setlodingS] = useState(true)\r\n\r\n    const router = useRouter()\r\n    useEffect(() => {\r\n        const myuser = JSON.parse(localStorage.getItem(\"myuser\"))\r\n        if (myuser && myuser.token) {\r\n            setuser(myuser)\r\n            setemail(myuser.email)\r\n            fetchdata(myuser.token)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (name && pincode.length == 6 && address && landmark && email) {\r\n            setdisabled(false)\r\n        }\r\n        else {\r\n            setdisabled(true)\r\n        }\r\n    }, [name, email, phone, pincode, address, landmark])\r\n\r\n    const fetchdata = async (token) => {\r\n        setlodingS(false)\r\n        let data = { token: token }\r\n        let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/getuser`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        let res = await a.json()\r\n        setaddress(res.address)\r\n        setphone(res.phone)\r\n        setpincode(res.pincode)\r\n        setname(res.name)\r\n        setlandmark(res.landmark)\r\n        getPincode(res.pincode)\r\n        setlodingS(true)\r\n    }\r\n\r\n    const getPincode = async (pin) => {\r\n        let pins = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/pincode`);\r\n        let pinJson = await pins.json();\r\n        if (Object.keys(pinJson).includes(pin)) {\r\n            setstate(pinJson[pin][0])\r\n            setcity(pinJson[pin][1])\r\n        }\r\n        else {\r\n            setstate('')\r\n            setcity('')\r\n        }\r\n    }\r\n\r\n    const handleChange = async (e) => {\r\n        if (e.target.name == 'name') {\r\n            setname(e.target.value)\r\n        }\r\n        else if (e.target.name == 'phone') {\r\n            setphone(e.target.value)\r\n            setTimeout(() => {\r\n                if (e.target.value.length <= 9 || e.target.value.length >= 11) {\r\n                    setmobilevalid(false)\r\n                }\r\n                else {\r\n                    setmobilevalid(true)\r\n                }\r\n            }, 3000);\r\n        }\r\n        else if (e.target.name == 'pincode') {\r\n            setpincode(e.target.value)\r\n            if (e.target.value.length == 6) {\r\n                getPincode(e.target.value)\r\n            }\r\n            else {\r\n                setstate('')\r\n                setcity('')\r\n            }\r\n            setTimeout(() => {\r\n                if (e.target.value.length <= 5 || e.target.value.length >= 7) {\r\n                    setvalidpincode(false)\r\n                }\r\n                else {\r\n                    setvalidpincode(true)\r\n                }\r\n            }, 3000);\r\n        }\r\n        else if (e.target.name == 'address') {\r\n            setaddress(e.target.value)\r\n        }\r\n        else if (e.target.name == 'landmark') {\r\n            setlandmark(e.target.value)\r\n        }\r\n        else if (e.target.name == 'alphone') {\r\n            setalphone(e.target.value)\r\n        }\r\n        else if (e.target.name == 'email') {\r\n            setemail(e.target.value)\r\n        }\r\n        else if (e.target.name == 'city') {\r\n            setcity(e.target.value)\r\n        }\r\n        else if (e.target.name == 'state') {\r\n            setstate(e.target.value)\r\n        }\r\n    }\r\n    const initiatePayment = async () => {\r\n        setlodingS(false)\r\n        let oid = Math.floor(Math.random() * Date.now());\r\n        let amount = subTotal + 40;\r\n        const data = { cart, subTotal, oid, amount, email: email, name, phone, pincode, address, state, city, landmark };\r\n        let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/pretransaction`, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        let txnRes = await a.json()\r\n        if (txnRes.success) {\r\n            let txnToken = txnRes.txnToken\r\n            var config = {\r\n                \"root\": \"\",\r\n                \"flow\": \"DEFAULT\",\r\n                \"data\": {\r\n                    \"orderId\": oid, /* update order id */\r\n                    \"token\": txnToken, /* update token value */\r\n                    \"tokenType\": \"TXN_TOKEN\",\r\n                    \"amount\": amount /* update amount */\r\n                },\r\n                \"handler\": {\r\n                    \"notifyMerchant\": function (eventName, data) {\r\n                        console.log(\"notifyMerchant handler function called\");\r\n                        console.log(\"eventName => \", eventName);\r\n                        console.log(\"data => \", data);\r\n                    }\r\n                }\r\n            };\r\n            window.Paytm.CheckoutJS.init(config).then(function onSuccess() {\r\n                // after successfully updating configuration, invoke JS Checkout\r\n                window.Paytm.CheckoutJS.invoke();\r\n            }).catch(function onError(error) {\r\n                console.log(\"error => \", error);\r\n            });\r\n        }\r\n        else {\r\n            if (txnRes.cardClear) {\r\n                clearCart()\r\n            }\r\n            toast.error(txnRes.error, {\r\n                position: \"top-left\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n        setlodingS(true)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"catoBack flex\">\r\n                <Head>\r\n                    <meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0\" />\r\n                    <title>Fresh Frveg - Checkout</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Shop fresh Fruits and vegetables online\"\r\n                    />\r\n                    <link rel=\"icon\" href=\"/favicon.ico\" />\r\n                </Head>\r\n                <Script type=\"application/javascript\" crossorigin=\"anonymous\" src={`${process.env.NEXT_PUBLIC_PAYTM_HOST}/merchantpgpui/checkoutjs/merchants/${process.env.NEXT_PUBLIC_PAYTM_MID}.js`} />\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={1000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                    {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>}\r\n                <div className=\"checkout-title relative my-8 mx-5 prevewCol PreBox w-full flex flex-row\">\r\n                    <div className=\"left-side bg-white letfWidth w-4/5 text-3xl text-gray-800 border border-gray-200 rounded-sm py-8 px-10 shadow-sm\">\r\n                        <p className=\"border-b headingPr pb-2 border-gray-200\">DELIVERY ADDRESS</p>\r\n                        <div className=\"delivery-detail pl-16 w-ThreebyF chckoutDe py-8\">\r\n                            <div className=\"personal-d grid grid-cols-2 userGrid gap-4\">\r\n                                <div className=\"flex flex-col\">\r\n                                    <label htmlFor=\"name\" className=\"text-base font-normal pl-1\">Name</label>\r\n                                    <input value={name} onChange={handleChange} type=\"text\" name='name' id=\"name\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                </div>\r\n                                <div className=\"flex flex-col relative\">\r\n                                    <label htmlFor=\"phone\" className=\"text-base font-normal pl-1\">10-digit mobile number</label>\r\n                                    <input value={phone} onChange={handleChange} type=\"number\" name='phone' id=\"phone\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                    {mobilevalid === false && <span className=\"text-red-700 text-sm absolute -bottom-5 right-0\">Enter a valid Mobile number</span>}\r\n                                </div>\r\n                                <div className=\"flex flex-col relative\">\r\n                                    <label htmlFor=\"pincode\" className=\"text-base font-normal pl-1\">Pincode</label>\r\n                                    <input value={pincode} onChange={handleChange} type=\"number\" name='pincode' id=\"pincode\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                    {validpincode === false && <span className=\"text-red-700 text-sm absolute -bottom-5 right-0\">Ender a valid Pincode</span>}\r\n                                </div>\r\n                                <div className=\"flex flex-col\">\r\n                                    <label htmlFor=\"email\" className=\"text-base font-normal pl-1\">Email</label>\r\n                                    {user && user.token ? <input value={user.email} readOnly type=\"email\" name='email' id=\"email\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" /> :\r\n                                        <input value={email} onChange={handleChange} type=\"email\" name='email' id=\"email\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />}\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"address\" className=\"text-base font-normal pl-1\">Address (Area and Street)</label>\r\n                            <textarea value={address} onChange={handleChange} type=\"text\" name='address' id=\"address\" cols=\"57\" required rows=\"3\" className=\"p-3 w-full focus:border-green-700 resize-none border outline-none input-bck text-gray-600 text-base border-gray-200\" />\r\n                            <div className=\"personal-d grid grid-cols-2 userGrid gap-4\">\r\n                                <div className=\"flex flex-col\">\r\n                                    <label htmlFor=\"city\" className=\"text-base font-normal pl-1\">City/District/Town</label>\r\n                                    <input value={city} onChange={handleChange} type=\"text\" name='city' id=\"city\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                </div>\r\n                                <div className=\"flex flex-col\">\r\n                                    <label htmlFor=\"state\" className=\"text-base font-normal pl-1\">State</label>\r\n                                    <input value={state} onChange={handleChange} type=\"text\" name='state' id=\"state\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                </div>\r\n                                <div className=\"flex flex-col\">\r\n                                    <label htmlFor=\"landmark\" className=\"text-base font-normal pl-1\">Landmark</label>\r\n                                    <input value={landmark} onChange={handleChange} type=\"text\" name='landmark' id=\"landmark\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                </div>\r\n                                <div className=\"flex flex-col\">\r\n                                    <label htmlFor=\"alphone\" className=\"text-base font-normal pl-1\">Alternate Phone (Optional)</label>\r\n                                    <input value={alphone} onChange={handleChange} type=\"number\" name='alphone' id=\"alphone\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className='headingPr paddiTop mt-8'>ORDER SUMMARY</p>\r\n                        <div className=\"products flex flex-col w-full text-sm mt-8\">\r\n                            <div className='flex justify-between items-center'>\r\n                                <div className=\"price-text flex justify-start px-4 text-base\">Item</div>\r\n                                <div className=\"price-text flex justify-end px-4 text-base\">Price</div>\r\n                            </div>\r\n                            {Object.keys(cart).length == 0 && (\r\n                                <div className=\"flex justify-center text-4xl text-green-700 py-10 items-center border-t border-b border-gray-200\">\r\n                                    Your cart is Empty...!\r\n                                </div>\r\n                            )}\r\n                            {Object.keys(cart).map((k) => {\r\n                                return (\r\n                                    <div\r\n                                        key={k}\r\n                                        className=\"product flex flex-row w-full border-t-2 border-b-2 border-gray-200 p-3\"\r\n                                    >\r\n                                        <div className=\"product-image w-36 flex justify-center imageProd mr-4\">\r\n                                            <img alt={cart[k].name} src={cart[k].image} />\r\n                                        </div>\r\n                                        <div className=\"product-text w-2/4 flex justify-start flex-col\">\r\n                                            <h1 className='text-2xl headPre font-medium'>{cart[k].name}</h1>\r\n                                            <p className='text-lg'>{cart[k].variant}</p>\r\n                                            <p className='text-sm text-green-700 font-medium'>In stock</p>\r\n                                            <div className=\"impTool mt-4 flex flex-row\">\r\n                                                <div className=\"qytselet relative flex border-r border-gray-200 px-3 items-center\">\r\n                                                    <AiOutlineMinusCircle onClick={() => { removeFromCart(k, 1, cart[k].price, cart[k].name, cart[k].variant, cart[k].image) }} className='text-3xl font-normal cursor-pointer mr-2' />\r\n                                                    <div className=\"qyantity w-11 rounded-sm text-center text-base h-7 border border-gray-600\">{cart[k].qty}</div>\r\n                                                    <AiOutlinePlusCircle onClick={() => { addToCart(k, 1, cart[k].price, cart[k].name, cart[k].variant, cart[k].image) }} className='text-3xl font-normal cursor-pointer ml-2' />\r\n                                                </div>\r\n                                                <div className=\"qytselet relative flex border-r border-gray-200 text-green-700 cursor-pointer hover:bg-gray-100 font-medium px-3 items-center\">\r\n                                                    <p onClick={() => { deleteFromCart(k, 1, cart[k].price, cart[k].name, cart[k].variant, cart[k].image) }}>Delete</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"product-price flex justify-end\">\r\n                                            <span className='text-2xl'>₹{cart[k].price}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                            <div className=\"flex justify-end\">\r\n                                <button\r\n                                    onClick={clearCart}\r\n                                    className=\"flex text-white font-medium text-sm rounded-full bg-red-700 justify-center w-28 mt-5  py-2 hover:text-gray-800 hover:bg-white border transition-all border-red-700\"\r\n                                >\r\n                                    <p>Clear Cart</p>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-side bg-white w-1/5 rightWidth ml-5 border border-gray-200 rounded-sm py-8 px-5 shadow-sm h-72\">\r\n                        <div className='flex justify-end items-center pb-2 text-3xl text-gray-800'>\r\n                            <div className=\"subtotal subJus pr-7\">Subtotal :</div>\r\n                            <div className='flex justify-end'>₹{subTotal}</div>\r\n                        </div>\r\n                        <div className=\"subtotal text-xl text-gray-800 flex justify-end pt-3  border-b-2 pb-2 border-gray-200\">Delivery Charge : ₹40</div>\r\n                        <div className=\"subtotal text-3xl text-gray-800 flex justify-end pt-10\">\r\n                            ₹{subTotal === 0 ? subTotal : subTotal + 40}\r\n                        </div>\r\n                        <div className=\"subtotal text-3xl text-gray-800 flex justify-end pt-3\">\r\n                            <button onClick={initiatePayment} disabled={disabled} className=\"relative flex cursor-pointer items-center text-white font-medium text-sm rounded-full disabled:bg-green-500 hover:disabled:text-white disabled:cursor-default bg-green-700 w-full justify-center  py-2 hover:text-gray-800 hover:bg-white border transition-all border-green-700\">\r\n                                <p>Proceed to Buy</p>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\componenat\\Footer.js",["236"],[],"import React from 'react'\r\nimport Image from 'next/image'\r\nimport Link from 'next/link'\r\n\r\nconst footer = () => {\r\n  return (\r\n    <div>\r\n      <footer className=\"text-gray-600 body-font footer-back\">\r\n        <div className=\"container px-5 py-14 mx-auto flex md:items-center lg:items-start md:flex-row md:flex-nowrap flex-wrap flex-col\">\r\n          <div className=\"w-64 flex-shrink-0 md:mx-0 mx-auto text-center md:text-left\">\r\n            <Link href=\"/\">\r\n              <a className=\"flex title-font font-medium items-center md:justify-start justify-center text-gray-900\">\r\n                <div className=\"logo mx-6\"><Image src=\"/logo.png\" width={120} height={90} /></div>\r\n              </a>\r\n            </Link>\r\n            <p className=\"mt-2  text-sm text-gray-500\">Fresh Frveg- Shop Online Fruits and vegetables</p>\r\n          </div>\r\n          <div className=\"flex-grow flex flex-wrap md:pl-20 -mb-10 md:mt-0 mt-10 md:text-left text-center\">\r\n            <div className=\"lg:w-1/4 md:w-1/2 w-full px-4\">\r\n              <h2 className=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">ABOUT US</h2>\r\n              <nav className=\"list-none mb-10\">\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">About us</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Our Vision & Purpos</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Quality standards</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">FAQs</a>\r\n                </li>\r\n              </nav>\r\n            </div>\r\n            <div className=\"lg:w-1/4 md:w-1/2 w-full px-4\">\r\n              <h2 className=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">OUR POLICES</h2>\r\n              <nav className=\"list-none mb-10\">\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Privacy police</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Disclaimer</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Data Protection police</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Information Security police</a>\r\n                </li>\r\n              </nav>\r\n            </div>\r\n            <div className=\"lg:w-1/4 md:w-1/2 w-full px-4\">\r\n              <h2 className=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">CATEGORIES</h2>\r\n              <nav className=\"list-none mb-10\">\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Fruits & Vegetables</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Eggs</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Bakery</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"text-gray-600 hover:text-gray-800\">Dry Food</a>\r\n                </li>\r\n              </nav>\r\n            </div>\r\n            <div className=\"lg:w-1/4 md:w-1/2 flex flex-col items-center justify-center w-full px-4\">\r\n              <h2 className=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">FOR ANY EQUIRY</h2>\r\n              <input\r\n                type=\"text\"\r\n                className=\"p-2  w-56 md:w-36 rounded-sm border outline-none focus:border-green-700 border-gray-600 text-gray-600\"\r\n                placeholder=\"Enter Your Email Address\"\r\n              />\r\n              <button className='font-medium text-xs rounded-full bg-green-700 w-32 px-3 py-3 mt-2 text-white hover:text-gray-800 hover:bg-white border transition-all border-green-700'><p>SEND</p></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-green-700\">\r\n          <div className=\"container mx-auto py-4 px-5 flex flex-wrap flex-col sm:flex-row\">\r\n            <p className=\"text-white text-sm text-center sm:text-left\">© 2022 Fresh Frveg —\r\n              <a href=\"https://twitter.com/FreshFrveg\" rel=\"noopener noreferrer\" className=\"text-gray-300 ml-1\" target=\"_blank\">@FreshFrveg</a>\r\n            </p>\r\n            <span className=\"inline-flex sm:ml-auto sm:mt-0 mt-2 justify-center sm:justify-start\">\r\n              <a className=\"text-white\">\r\n                <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\"></path>\r\n                </svg>\r\n              </a>\r\n              <a className=\"ml-3 text-white\">\r\n                <svg fill=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\"></path>\r\n                </svg>\r\n              </a>\r\n              <a className=\"ml-3 text-white\">\r\n                <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\r\n                  <rect width=\"20\" height=\"20\" x=\"2\" y=\"2\" rx=\"5\" ry=\"5\"></rect>\r\n                  <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\"></path>\r\n                </svg>\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default footer","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\componenat\\Navbar.js",["237"],[],"import React from 'react'\r\nimport Link from 'next/link'\r\nimport Image from 'next/image'\r\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\r\nimport { RiAccountCircleLine } from 'react-icons/ri';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { TbPhoneCall } from 'react-icons/tb';\r\nimport { BiRupee } from 'react-icons/bi';\r\nimport { MdSupervisorAccount } from 'react-icons/md';\r\nimport { BsTruck } from 'react-icons/bs';\r\n\r\n\r\n\r\nconst navbar = () => {\r\n  return (\r\n    <div className=\"menuBar\">\r\n      <div className=\"offer-menu bg-green-700 flex flex-row justify-end p-1\">\r\n        <div className=\"cart border-r-2 border-gray-200 mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\"><TbPhoneCall className=\"pr-1\" />\r\n        <span className=\"text-sm pr-2\">+91 9999557786</span>\r\n        </div>\r\n        <div className=\"cart border-r-2 border-gray-200 mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\"><BiRupee className=\"pr-1\" />\r\n        <span className=\"text-sm pr-2\">Sell on Brownbag</span>\r\n        </div>\r\n        <div className=\"cart border-r-2 border-gray-200 mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\"><MdSupervisorAccount className=\"pr-1\" />\r\n        <span className=\"text-sm pr-2\">+91 Franchise</span>\r\n        </div>\r\n        <div className=\"cart mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\"><BsTruck className=\"pr-1\" />\r\n        <span className=\"text-sm pr-2\">Need Delivery Partner</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"background flex justify-between items-center shadow-sm shadow-gray-300 ... z-40 ...\">\r\n        <div className=\"nav flex justify-center items-center\">\r\n          <div className=\"logo mx-6\"><Image src=\"/logo.png\" width={100} height={70} /></div>\r\n          <ul className=\"flex justify-center\">\r\n            <li className=\"mx-6 text-lg font-normal tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\"><Link href=\"/\"><a>Home</a></Link></li>\r\n            <li className=\"mx-6 text-lg font-normal tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\"><Link href=\"/about\"><a>About</a></Link></li>\r\n            <li className=\"mx-6 text-lg font-normal tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\"><Link href=\"/shop\"><a>Shop</a></Link></li>\r\n            <li className=\"mx-6 text-lg font-normal tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\"><Link href=\"/Vegitables\"><a>Vegitables</a></Link></li>\r\n            <li className=\"mx-6 text-lg font-normal tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\"><Link href=\"/contact\"><a>Contact</a></Link></li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"impLink flex justify-center items-center\">\r\n          <input type=\"text\" className=\"p-2 -mr-10 w-80 rounded-md text-gray-600\" placeholder=\"Search\" />\r\n          <div className=\"cart mr-4 text-2xl p-2 rounded-l-none rounded-md bg-green-900 cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all\"><AiOutlineSearch /></div>\r\n          <div className=\"cart mx-4 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all\"><RiAccountCircleLine /></div>\r\n          <div className=\"cart mx-4 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all\"><AiOutlineShoppingCart /></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default navbar","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\contact.js",["238"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Head from \"next/head\"\r\nimport Link from \"next/link\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useRouter } from \"next/router\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { AiOutlineTwitter } from \"react-icons/ai\";\r\nimport { AiOutlineInstagram } from \"react-icons/ai\";\r\nimport Image from \"next/image\";\r\n\r\n\r\nconst Contact = () => {\r\n  const [name, setname] = useState(\"\")\r\n  const [email, setemail] = useState(\"\")\r\n  const [message, setmessage] = useState(\"\")\r\n  const [disabled, setdisabled] = useState(true)\r\n  const [lodingS, setlodingS] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (name && email && message) {\r\n      setdisabled(false)\r\n    }\r\n    else {\r\n      setdisabled(true)\r\n    }\r\n  }, [name, email, message])\r\n\r\n  const handleChange = async (e) => {\r\n    e.preventDefault()\r\n    if (e.target.name == 'name') {\r\n      setname(e.target.value)\r\n    }\r\n    else if (e.target.name == 'email') {\r\n      setemail(e.target.value)\r\n    }\r\n    else if (e.target.name == 'message') {\r\n      setmessage(e.target.value)\r\n    }\r\n  }\r\n\r\n  const submitQuery = async (e) => {\r\n    setlodingS(false)\r\n    let data = { name, email, message }\r\n    let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/addquery`, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    let res = await a.json()\r\n    setname('')\r\n    setemail('')\r\n    setmessage('')\r\n    setlodingS(true)\r\n    toast.success('Message send successfully', {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Fresh Frveg - Contact</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg z-10 top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>}\r\n      <div className=\"flex justify-around flex-row flexCol-con py-20 relative\">\r\n        {/* {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg pl-6 top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>} */}\r\n        <div className=\"left margin-bot\">\r\n          <p className='text-5xl text-green-700 pb-16 textSma'>WE&rsquo;RE READY, LET&rsquo;S TALK.</p>\r\n          <div className=\"contact flex flex-col\">\r\n            <input value={name} onChange={handleChange} type=\"text\" id=\"name\" name='name' placeholder=\"Your Name\" required className=\"p-3 outline-none focus:border-green-700 mb-5 input-bck text-gray-600 text-base border border-gray-300\" />\r\n            <input value={email} onChange={handleChange} type=\"text\" id=\"email\" name=\"email\" placeholder=\"Your Email / Mobile No\" required className=\"p-3 outline-none focus:border-green-700 mb-5 input-bck text-gray-600 text-base border border-gray-300\" />\r\n            <textarea value={message} onChange={handleChange} type=\"text\" id=\"message\" name=\"message\" placeholder=\"Message\" required cols=\"57\" rows=\"5\" className=\"p-3 resize-none outline-none focus:border-green-700 mb-5 input-bck text-gray-600 border text-base border-gray-300\" />\r\n            <button onClick={submitQuery} disabled={disabled} className='font-medium rounded-full disabled:bg-green-500 hover:disabled:text-white disabled:cursor-default bg-green-700 w-52 px-10 py-4 hover:bg-white text-white hover:text-gray-800 border transition-all border-green-700'>\r\n              {lodingS === false ? <h6>WAIT</h6> : <h6>SEND MESSAGE</h6>}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <p className='text-5xl text-green-700 pb-16 textSma'>CONTACT INFO</p>\r\n          <div className=\"contact flex flex-col\">\r\n            <div className=\"wrap pb-2\">\r\n              <p className='text-lg text-gray-900 font-medium'>Address</p>\r\n              <h5 className='text-gray-600'>Swaroop Nagar, Delhi- 110042, India</h5>\r\n            </div>\r\n            <div className=\"wrap pb-2\">\r\n              <p className='text-lg text-gray-900 font-medium'>Email Us</p>\r\n              <h5 className='text-gray-600'>Contact@freshFrveg</h5>\r\n            </div>\r\n            <div className=\"wrap pb-2\">\r\n              <p className='text-lg text-gray-900 font-medium'>Call Us</p>\r\n              <h5 className='text-gray-600'>+91 9999557786</h5>\r\n            </div>\r\n            <div className=\"wrap flex flex-row text-2xl\">\r\n              <div className='px-2 text-green-700 cursor-pointer'><BsFacebook /></div>\r\n              <div className='px-2 text-green-700 cursor-pointer'><AiOutlineTwitter /></div>\r\n              <div className='px-2 text-green-700 cursor-pointer'><AiOutlineInstagram /></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\index.js",["239","240","241","242","243","244","245","246","247","248","249","250","251"],[],"import Head from \"next/head\";\nimport Image from \"next/image\";\nimport styles from \"../styles/Home.module.css\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\nimport \"@splidejs/react-splide/css\";\nimport Product from \"../modal/Product\";\nimport mongoose from \"mongoose\";\nimport Link from \"next/link\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Home({ fruits, vegitables }) {\n  return (\n    <div>\n      <Head>\n        <title>Fresh Frveg- Shop Online Fruits and vegetables</title>\n        <meta\n          name=\"description\"\n          content=\"Shop fresh Fruits and vegetables online\"\n        />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={1000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <div className=\"relative z-10\">\n        <Splide\n          className=\"maxH overflow-hidden\"\n          options={{\n            rewind: true,\n            autoplay: true,\n            speed: 800,\n          }}\n        >\n          <SplideSlide>\n            <div className=\"w-auto blurC\">\n              <Image src=\"/V1.jpg\" width={1520} height={860} />\n            </div>\n          </SplideSlide>\n          <SplideSlide>\n            <div className=\"w-auto blurC\">\n              <Image src=\"/F3.jpg\" width={1520} height={860} />\n            </div>\n          </SplideSlide>\n          <SplideSlide>\n            <div className=\"w-auto blurC\">\n              <Image src=\"/V3.jpg\" width={1520} height={860} />\n            </div>\n          </SplideSlide>\n          <SplideSlide>\n            <div className=\"w-auto blurC\">\n              <Image src=\"/V2.jpg\" width={1520} height={860} />\n            </div>\n          </SplideSlide>\n          <SplideSlide>\n            <div className=\"w-auto blurC\">\n              <Image src=\"/F2.jpg\" width={1520} height={860} />\n            </div>\n          </SplideSlide>\n          <SplideSlide>\n            <div className=\"w-auto\">\n              <Image src=\"/F1.jpg\" width={1520} height={860} />\n            </div>\n          </SplideSlide>\n        </Splide>\n        <div className=\"absolute px-3 top-1/4 w-full flex justify-center flex-col items-center\">\n          <p className=\"textTitle text-5xl pb-3 text-white\">Here We Provide You Fresh Fruit&rsquo;s and Green Vegitable&rsquo;s </p>\n          <div className=\"logoTitle w-40 h-40 pt-5 blurCOne\">\n            <img src=\"/favicon.png\" alt=\"logo\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-gray-200 shadow-md\">\n        <div className=\"services grid lg:grid-cols-4 gap-y-10 md:grid-cols-2 md:w-full items-center bg-gray-200 p-2 lg:w-4/5 mx-auto justify-center\">\n          <div className=\"service flex justify-center items-center flex-col mx-16\">\n            <Image src=\"/5 (3).png\" width=\"55px\" height=\"50px\" />\n            <h2 className=\"text-lg font-normal tracking-wider text-center text-gray-700\">\n              Freshest Produce\n            </h2>\n          </div>\n\n          <div className=\"service flex justify-center items-center flex-col mx-16\">\n            <Image src=\"/okk.jpg\" width=\"45px\" height=\"50px\" />\n            <h2 className=\"text-lg font-normal tracking-wider text-center text-gray-700\">\n              Good Quality\n            </h2>\n          </div>\n          <div className=\"service flex justify-center items-center flex-col mx-16\">\n            <Image src=\"/5 (1).png\" width=\"50px\" height=\"50px\" />\n            <h2 className=\"text-lg font-normal tracking-wider text-center text-gray-700\">\n              Fast Delivery\n            </h2>\n          </div>\n          <div className=\"service flex justify-center items-center flex-col mx-16\">\n            <Image src=\"/5 (2).png\" width=\"40px\" height=\"50px\" />\n            <h2 className=\"text-lg font-normal tracking-wider text-center text-gray-700\">\n              Customer Service\n            </h2>\n          </div>\n        </div>\n      </div>\n      <div className=\"catoBack pb-1\">\n        <hr className=\"mt-12 drop-shadow-2xl ...\" />\n        <div className=\"shop-title w-96 text-center shadow-md p-3 m-auto background text-white text-3xl rounded-sm\">\n          Shop by Chatogary\n        </div>\n        <div className=\"catogaryes drop-shadow-sm bg-white maginIt lg:mx-16 sm:mx-5 my-6 rounded-sm relative h-72\">\n          <div className=\"element absolute text-2xl font-semibold top-5 text-gray-800 left-5 tracking-wide\">\n            Fresh Fruits\n          </div>\n          <div className=\"slider absolute bottom-4 left-0 right-0\">\n            <Splide\n              options={{\n                perPage: 6,\n                perMove: 1,\n                gap: \"-2rem\",\n                breakpoints: {\n                  1212: {\n                    perPage: 4,\n\n                  },\n                  930: {\n                    perPage: 3,\n\n                  },\n                  717: {\n                    perPage: 2,\n\n                  },\n                  550: {\n                    perPage: 1,\n                    rewind: true,\n                    autoplay: true,\n                    speed: 800,\n\n                  },\n                },\n              }}\n            >\n              {fruits.map((item) => {\n                return (\n                  <Link passHref={true}\n                    key={item._id}\n                    href={`/products/${item.slug}`}>\n                    <SplideSlide>\n                      <div className=\"imagePro flex items-center flex-col cursor-pointer pb-7 mt-2\">\n                        <p className=\"text-gray-700 text-lg pb-6\">{item.title}</p>\n                        <img src={`/${item.img}`} className=\"productImgS\" alt={item.title} />\n                      </div>\n                    </SplideSlide>\n                  </Link>\n                );\n              })}\n            </Splide>\n          </div>\n        </div>\n        <div className=\"catogaryes drop-shadow-sm bg-white maginIt lg:mx-16 sm:mx-5 my-6 rounded-sm relative h-72\">\n          <div className=\"element absolute text-2xl font-semibold top-5 text-gray-800 left-5 tracking-wide\">\n            Fresh Vegitables\n          </div>\n          <div className=\"slider absolute bottom-4 left-0 right-0\">\n            <Splide\n              options={{\n                perPage: 6,\n                perMove: 1,\n                gap: \"-2rem\",\n                breakpoints: {\n                  1212: {\n                    perPage: 4,\n\n                  },\n                  930: {\n                    perPage: 3,\n\n                  },\n                  717: {\n                    perPage: 2,\n\n                  },\n                  550: {\n                    perPage: 1,\n                    rewind: true,\n                    autoplay: true,\n                    speed: 800,\n\n                  },\n                },\n              }}\n            >\n              {vegitables.map((item) => {\n                return (\n                  <Link passHref={true}\n                    key={item._id}\n                    href={`/products/${item.slug}`}>\n                    <SplideSlide>\n                      <div className=\"imagePro flex items-center flex-col cursor-pointer pb-7 mt-2\">\n                        <p className=\"text-gray-700 text-lg pb-6\">{item.title}</p>\n                        <img src={`/${item.img}`} className=\"productImgS\" alt={item.title} />\n                      </div>\n                    </SplideSlide>\n                  </Link>\n                );\n              })}\n            </Splide>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  if (!mongoose.connections[0].readyState) {\n    await mongoose.connect(process.env.MONGO_URI);\n  }\n  let fruits = await Product.find({ category: 'Fruits' });\n  let vegitables = await Product.find({ category: 'Vegitable' });\n  return {\n    props: { fruits: JSON.parse(JSON.stringify(fruits)), vegitables: JSON.parse(JSON.stringify(vegitables)) },\n  };\n}\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\login.js",["252","253"],[],"import React from 'react'\r\nimport Image from 'next/image'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport { useRouter } from \"next/router\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { VscLock } from 'react-icons/vsc';\r\n\r\nconst Login = () => {\r\n  const router = useRouter()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [lodingS, setlodingS] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('myuser')) {\r\n      router.push('/')\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name == 'email') {\r\n      setEmail(e.target.value.toLowerCase())\r\n    }\r\n    if (e.target.name == 'password') {\r\n      setPassword(e.target.value)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    setlodingS(false)\r\n    e.preventDefault()\r\n    const data = { email, password }\r\n    let res = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/login`, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    let response = await res.json()\r\n    // console.log(response)\r\n    setlodingS(true)\r\n    setEmail('')\r\n    setPassword('')\r\n    if (response.success) {\r\n      localStorage.setItem(\"myuser\", JSON.stringify({ token: response.token, email: response.email, name: response.name }))\r\n      toast.success('You are successfully logged in', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setTimeout(() => {\r\n        router.push(process.env.NEXT_PUBLIC_HOST)\r\n      }, 2000);\r\n    }\r\n    else {\r\n      toast.error(response.error, {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Fresh Frveg - Login</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className='flex relative'>\r\n        {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>}\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <div className=\"login flex justify-center border-2 bg-white border-gray-200 shadow-md rounded-sm my-9 mx-auto\">\r\n          <div className=\"client-data flex flex-col w-full px-6 py-4\">\r\n            <p className=\"text-3xl pb-3 font-normal\">Sign-In</p>\r\n            <form onSubmit={handleSubmit} method=\"POST\">\r\n              <div className=\"flex flex-col pb-3\">\r\n                <label htmlFor=\"email\" className=\"text-base font-normal pl-1 pb-1\">Email</label>\r\n                <input value={email} onChange={handleChange} type=\"email\" name='email' id=\"email\" required autoComplete=\"email\" placeholder='Email' className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n              </div>\r\n              <div className=\"flex flex-col pb-1\">\r\n                <label htmlFor=\"password\" className=\"text-base font-normal pl-1 pb-1\">Password</label>\r\n                <input value={password} onChange={handleChange} type=\"password\" name='password' id=\"password\" required autoComplete=\"password\" placeholder='At least 6 characters' className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n              </div>\r\n              <Link href={'/forget'}><a><p className='flex justify-end text-green-700 pb-2 font-medium pr-1'>Forgot Password</p></a></Link>\r\n              <p className='text-gray-500 pt-4 text-xs'>By continuing, you agree to FreshFrveg&apos;s Conditions of Use and Privacy Notice.</p>\r\n              <div className=\"text-3xl text-gray-800 flex justify-end border-b pb-2 border-gray-300 pt-3\"><button type=\"submit\" className=\"flex relative text-white font-medium text-sm rounded-full bg-green-700 w-full justify-center  py-2 hover:text-gray-800 hover:bg-white border transition-all border-green-700\">\r\n                {lodingS === false ? <p>WAIT</p> : <p>CONTINUE</p>}\r\n                <span className=\"lock absolute flex justify-start text-lg pl-6 items-center w-full\"><VscLock /></span>\r\n              </button></div>\r\n            </form>\r\n            <p className='text-gray-500 pt-2 text-sm'>Don&apos;t have account? <span className='text-green-700 font-medium'><Link href={\"/signup\"}>Sign up</Link></span></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\order.js",["254","255"],[],"import React, { useEffect, useState, useRef } from 'react'\r\nimport Image from 'next/image'\r\nimport Head from 'next/head'\r\nimport mongoose from 'mongoose'\r\nimport Order from '../modal/Order'\r\nimport { useRouter } from 'next/router'\r\nimport { useReactToPrint } from 'react-to-print'\r\n\r\n\r\nconst MyOrder = ({ order, clearCart }) => {\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n  const products = order.products;\r\n  const router = useRouter()\r\n  const [date, setdate] = useState()\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  useEffect(() => {\r\n    const d = new Date(order.createdAt)\r\n    setdate(d)\r\n    if (router.query.clearCart == 1) {\r\n      clearCart()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Fresh Frveg - Order</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className=\"text-gray-700 body-font catoBack relative flex\">\r\n        <div ref={componentRef} className=\"order-page OrderW bg-white mx-auto my-8 py-8 px-10 flex flex-col\">\r\n          <div className=\"order-detail w-full\">\r\n            <div className='pb-16'><p className='text-3xl font-medium'>Hii.. {order.name}</p></div>\r\n            <div className=\"order-d flex pb-16\">\r\n              <div className=\"leftOrd w-3/6 border-r-2 border-gray-200\">\r\n                <p className='text-2xl pb-4 font-medium text-green-700'>Order successfully placed.</p>\r\n                <p className='text-base pb-4'>Order placed on  {date && date.toLocaleDateString(\"en-US\", options)} </p>\r\n                <p className='text-base pb-16'>Your order will be delivered by Tomorrow</p>\r\n                <p className='text-base pb-1'>We are pleased to confirm your order no</p>\r\n                <p className='text-base pb-1 font-medium'>#{order.orderId}</p>\r\n                <p className='text-base pb-1'>Thank you for shopping with <span className='font-medium text-green-700'>FreshFrveg</span></p>\r\n                <button className='font-medium rounded-full bg-green-700 w-48 px-8 mt-10 py-2 hover:bg-white text-white hover:text-gray-800 border transition-all border-green-700'><h6>Track Order</h6></button>\r\n              </div>\r\n              <div className=\"rightOrd w-3/6 pl-10\">\r\n                <p className='text-2xl pb-4 font-medium'>Delivery Address</p>\r\n                <p className='text-base pb-1'>{order.name}</p>\r\n                <p className='text-base pb-1 '>{order.address}</p>\r\n                <p className='text-base pb-1 '>{order.landmark}</p>\r\n                <p className='text-base pb-1'>{order.city} {order.state} - {order.pincode}</p>\r\n                <p className='text-base pb-1'>Mob. +91{order.phone}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {Object.keys(products).map((key) => {\r\n            return <div key={key} className=\"order-product border-b border-gray-200\">\r\n              <div className=\"productIten flex flex-row w-4/5  p-3\">\r\n                <div className=\"product-image w-1/6 flex justify-center\">\r\n                  <Image src={products[key].image} width={170} height={150} />\r\n                </div>\r\n                <div className=\"product-text w-2/4 flex justify-start flex-col pl-5\">\r\n                  <h1 className='text-2xl font-medium'>{products[key].name}</h1>\r\n                  <p className='text-lg'>{products[key].variant}</p>\r\n                  <div className=\"impTool flex flex-row\">\r\n                    <div className=\"qytselet relative flex items-center\">\r\n                      <div className=\"qyantity text-xl \">Qty: {products[key].qty}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"product-price w-1/6 flex flex-col justify-between\">\r\n                  <span className='text-xl pb-4'>₹{products[key].price}</span>\r\n                </div>\r\n                <div className=\"product-price w-1/6 items-center ml-24 flex flex-col justify-between\">\r\n                  <span className='text-xl pb-4'>₹{parseInt(products[key].price) * parseInt(products[key].qty)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })}\r\n          <div className=\"order-payment flex border-t border-b py-3 border-gray-200\">\r\n            <div className=\"left w-3/6\">\r\n              <p className='text-2xl font-medium'>Payment Details</p>\r\n              <p className='pt-4 text-xl'>{order.status}</p>\r\n            </div>\r\n            <div className=\"right w-3/6  flex justify-end pt-10\">\r\n              <div className=\"w-2/5 orderLasPR grid grid-cols-2 pr-3\">\r\n                <p>Items :</p>\r\n                <p>₹{order.amount}</p>\r\n                <p>Delivery :</p>\r\n                <p>₹40</p>\r\n                <p>Total :</p>\r\n                <p>₹{parseInt(order.amount) + 40}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=' flex justify-end pt-5 items-center pr-12'>\r\n            <button onClick={handlePrint} className='font-medium text-base rounded-full bg-green-700 w-32 px-3 py-3 mt-2 text-white hover:text-gray-800 hover:bg-white border transition-all border-green-700'>Print</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  if (!mongoose.connections[0].readyState) {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n  }\r\n  let order = await Order.findById(context.query.id);\r\n  return {\r\n    props: { order: JSON.parse(JSON.stringify(order)) }\r\n  };\r\n}\r\n\r\nexport default MyOrder","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\products\\[slug].js",["256"],[],"import { useRouter } from \"next/router\";\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\nimport Product from \"../../modal/Product\";\r\nimport Error from \"next/error\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\r\nimport mongoose from \"mongoose\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Head from \"next/head\";\r\n\r\n\r\nconst Post = ({ cart, addToCart, toggleCart, product, buyNow, error }) => {\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n  const [pin, setPin] = useState();\r\n  const [service, setService] = useState();\r\n  const [lodingS, setlodingS] = useState(true)\r\n  const checkServiceablity = async () => {\r\n    setlodingS(false)\r\n    let pins = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/pincode`);\r\n    let pinJson = await pins.json();\r\n    if (Object.keys(pinJson).includes(pin)) {\r\n      setService(true);\r\n      toast.success('Delivery is available in your area', {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      setService(false);\r\n      toast.error('Sorry..! delivery is not available in your area!', {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    setlodingS(true)\r\n  };\r\n  const onChangePin = (e) => {\r\n    setPin(e.target.value);\r\n  };\r\n  if (error == 404) {\r\n    return <Error statusCode={404} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Fresh Frveg - {product.title}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <section className=\"text-gray-600 body-font overflow-hidden\">\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={1000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <div className=\"px-5 py-20 productTP mx-auto\">\r\n          <div className=\"mx-auto flex justify-center items-center productFle\">\r\n            <div className=\"image w-1/2 pr-10 propad h-96 flex justify-end items-center\">\r\n              <img className=\"w-96\" src={`/${product.img}`} alt={product.title} />\r\n            </div>\r\n            <div className=\"pl-10 w-1/2 flex justify-start producDetail flex-col py-6 propad mt-0 relative\">\r\n              <h2 className=\"text-base title-font text-gray-500 tracking-widest\">\r\n                {product.category}\r\n              </h2>\r\n              <h1 className=\"text-gray-900 text-4xl title-font font-medium pb-5 border-gray-200\">\r\n                {product.title}-{product.size}\r\n              </h1>\r\n              <p className=\"leading-relaxed w-3/5 py-2 mb-3 border-b border-t border-gray-200\">\r\n                {product.desc}\r\n              </p>\r\n              <p className=\"leading-relaxed py-2\">\r\n                {product.availableQty == 0 ? <span className=\"font-medium text-xl\">Out of stock!</span> : <span>Total Stock: {product.availableQty}</span>}\r\n              </p>\r\n              <div className=\"flex flexButton\">\r\n                <span className=\"title-font flex flexButtonBP items-center font-medium text-3xl text-gray-900 mr-10\">\r\n                  ₹{product.price}\r\n                </span>\r\n                <div className=\"flex flex-row justify-start\">\r\n                  <button disabled={product.availableQty == 0}\r\n                    onClick={() => {\r\n                      toast.success('Item added in cart', {\r\n                        position: \"top-left\",\r\n                        autoClose: 1000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                      });\r\n                      addToCart(\r\n                        slug,\r\n                        1,\r\n                        product.price,\r\n                        product.title,\r\n                        product.category,\r\n                        `/${product.img}`\r\n                      );\r\n                      toggleCart();\r\n                    }}\r\n                    className=\"flex disabled:bg-green-500 buttonHi hover:disabled:text-white disabled:cursor-default text-white font-medium text-base rounded-full mx-2 bg-green-700 px-5 py-3 hover:text-gray-800 hover:bg-white border transition-all border-green-700\"\r\n                  >\r\n                    <p>Add to cart</p>\r\n                  </button>\r\n                  <button disabled={product.availableQty == 0} onClick={() => {\r\n                    buyNow(\r\n                      slug,\r\n                      1,\r\n                      product.price,\r\n                      product.title,\r\n                      product.category,\r\n                      `/${product.img}`\r\n                    );\r\n                  }} className=\"flex disabled:bg-green-500 buttonHi hover:disabled:text-white disabled:cursor-default text-white font-medium text-base rounded-full mx-2 bg-green-700 px-5 py-3 hover:text-gray-800 hover:bg-white border transition-all border-green-700\">\r\n                    <p>Buy Now</p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\" flex justify-start mt-8\">\r\n                <input\r\n                  onChange={onChangePin}\r\n                  type=\"text\"\r\n                  className=\"p-2 w-52 outline-none rounded-sm border text-gray-600 border-green-700\"\r\n                  placeholder=\"Enter Your Pincode\"\r\n                />\r\n                <button\r\n                  onClick={checkServiceablity}\r\n                  className=\"font-medium text-base  ml-1 rounded-md px-5 bg-green-700 text-white hover:text-gray-800 hover:bg-white border transition-all border-green-700\"\r\n                >\r\n                  {lodingS === false ? <p>Wait</p> : <p>Check</p>}\r\n                </button>\r\n              </div>\r\n              <div className=\"flex justify-start absolute -bottom-3 serviceP\">\r\n                {service && service != null && (\r\n                  <div className=\"text text-sm text-green-600\">\r\n                    Delivery is available in your area\r\n                  </div>\r\n                )}\r\n                {!service && service != null && (\r\n                  <div className=\"text text-sm text-red-600\">\r\n                    Sorry..! delivery is not available in your area\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n  let error = null;\r\n  if (!mongoose.connections[0].readyState) {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n  }\r\n  let product = await Product.findOne({ slug: context.query.slug });\r\n  if (product == null) {\r\n    return {\r\n      props: { error: 404 }\r\n    };\r\n  }\r\n  return {\r\n    props: { error: error, product: JSON.parse(JSON.stringify(product)) }\r\n  };\r\n}\r\n\r\nexport default Post;\r\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\Vegitables.js",["257"],[],"import React from 'react'\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport Head from \"next/head\"\r\nimport Product from \"../modal/Product\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst Vegitables = ({products}) => {\r\n  return (\r\n    <div className=\"text-gray-600 body-font catoBack relative\">\r\n      <Head>\r\n        <title>Fresh Frveg - Vegitables</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <section className=\"flex flex-row\">\r\n        {/* <div className=\"filter-side w-1/5 bg-white m-1\">Hello</div> */}\r\n        <div className=\"product-side w-90 mx-auto\">\r\n          <div className=\"shop-title w-96 shadow-md shopCat my-5 text-center p-3 m-auto background text-white text-3xl rounded-sm\">\r\n            Shop Vegitables\r\n          </div>\r\n          {Object.keys(products).length == 0 && <div className=\"flex justify-center items-center text-xl text-gray-700 font-medium\">Sorry, all the item are currently out of stock. New stock coming soon. Stay Tuned!</div>}\r\n          <div className=\"product-item grid grid-cols-6 productsIt gap-3 my-5 justify-center items-center\">\r\n            {products.map((item) => {\r\n              return (\r\n                <Link\r\n                  passHref={true}\r\n                  key={item._id}\r\n                  href={`/products/${item.slug}`}\r\n                >\r\n                  <div className=\"product-box relative productSize hover:bg-gray-50 bg-white flex flex-col items-center justify-center border rounded-sm tranAnimaS shadow-sm hover:shadow-xl hover:border-gray-200 border-gray-100 cursor-pointer\">\r\n                  {item.availableQty == 0 && <div className=\"absolute flex font-medium text-gray-700 justify-center items-center w-full py-2 tranbackgr z-10 text-2xl mt-6\">Out of Stock!</div>}\r\n                    <div className=\"product-image w-36 h-40 overflow-hidden flex items-center justify-center\">\r\n                      <img className=\"scale\" src={`/${item.img}`} alt={item.title} />\r\n                    </div>\r\n                    <div className=\"product-text text-left self-start w-full pl-3\">\r\n                      <h2 className=\"text-base\">{item.category}</h2>\r\n                      <div className=\"product-price flex justify-between items-center\">\r\n                        <div className=\"div\">\r\n                          <h1 className=\"text-xl text-gray-900 font-medium\">\r\n                            {item.title}\r\n                          </h1>\r\n                          <p className=\"text-sm text-gray-900\">\r\n                            {item.size}\r\n                          </p>\r\n                          <p className=\"text-base text-gray-900 font-medium pb-1\">\r\n                            ₹{item.price}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"shop spin text-gray-600 text-2xl pr-3\">\r\n                          <AiOutlineShoppingCart />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  if (!mongoose.connections[0].readyState) {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n  }\r\n  let products = await Product.find({category: 'Vegitable'});\r\n  return {\r\n    props: { products: JSON.parse(JSON.stringify(products)) },\r\n  };\r\n}\r\n\r\n\r\nexport default Vegitables","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\_app.js",["258","259"],[],"import \"../styles/globals.css\";\nimport \"../styles/responsive.css\";\nimport Footer from \"./componenat/Footer\";\nimport Header from \"./componenat/Header\";\nimport LoadingBar from 'react-top-loading-bar'\nimport { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { CgClose } from \"react-icons/cg\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction MyApp({ Component, pageProps }) {\n  const router = useRouter()\n  const toggleCart = () => {\n    if (ref.current.classList.contains(\"translate-x-full\")) {\n      ref.current.classList.remove(\"translate-x-full\");\n      ref.current.classList.add(\"translate-x-0\");\n      document.body.style.overflowY = 'hidden';\n    } else if (!ref.current.classList.contains(\"translate-x-full\")) {\n      ref.current.classList.remove(\"translate-x-0\");\n      ref.current.classList.add(\"translate-x-full\");\n      document.body.style.overflowY = 'scroll';\n    }\n  };\n  const ref = useRef();\n\n  const [cart, setCart] = useState({});\n  const [subTotal, setSubTotal] = useState(0);\n  const [user, setuser] = useState({ value: null })\n  const [key, setKey] = useState()\n  const [progress, setProgress] = useState(0)\n  useEffect(() => {\n    router.events.on('routeChangeStart', () => {\n      setProgress(40)\n    })\n    router.events.on('routeChangeComplete', () => {\n      setProgress(100)\n    })\n    try {\n      if (localStorage.getItem(\"cart\")) {\n        setCart(JSON.parse(localStorage.getItem(\"cart\")));\n        saveCart(JSON.parse(localStorage.getItem(\"cart\")));\n      }\n    } catch (error) {\n      console.error(error);\n      localStorage.clear();\n    }\n    const myuser = JSON.parse(localStorage.getItem(\"myuser\"))\n    if (myuser) {\n      setuser({ value: myuser.token, email: myuser.email })\n    }\n    setKey(Math.random())\n  }, [router.query]);\n\n  const logout = () => {\n    localStorage.removeItem('myuser')\n    setuser({ value: null })\n    setKey(Math.random())\n    router.push('/')\n  }\n\n  const saveCart = (myCart) => {\n    localStorage.setItem(\"cart\", JSON.stringify(myCart));\n    let subt = 0;\n    let keys = Object.keys(myCart);\n    for (let i = 0; i < keys.length; i++) {\n      subt += myCart[keys[i]].price * myCart[keys[i]].qty;\n    }\n    setSubTotal(subt);\n  };\n  const addToCart = (itemCode, qty, price, name, variant, image) => {\n    let newCart = cart;\n    if (itemCode in cart) {\n      newCart[itemCode].qty = cart[itemCode].qty + qty\n    } else {\n      newCart[itemCode] = { qty: 1, price, name, variant, image };\n    }\n    setCart(newCart);\n    saveCart(newCart);\n  };\n  const clearCart = () => {\n    document.body.style.overflowY = 'scroll';\n    toast.success('Your cart is cleared', {\n      position: \"top-left\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    setCart({});\n    saveCart({});\n  };\n  const removeFromCart = (itemCode, qty, price, name, variant, image) => {\n    let newCart = cart;\n    if (itemCode in cart) {\n      newCart[itemCode].qty = cart[itemCode].qty - qty;\n    }\n    if (newCart[itemCode][\"qty\"] <= 0) {\n      delete newCart[itemCode];\n    }\n    setCart(newCart);\n    saveCart(newCart);\n  };\n\n  const deleteFromCart = (itemCode, qty, price, name, variant, image) => {\n    let newCart = cart;\n    if (itemCode in cart) {\n      newCart[itemCode].qty = cart[itemCode].qty - cart[itemCode].qty;\n    }\n    if (newCart[itemCode][\"qty\"] <= 0) {\n      delete newCart[itemCode];\n    }\n    setCart(newCart);\n    saveCart(newCart);\n  };\n\n\n\n  const buyNow = (itemCode, qty, price, name, variant, image) => {\n    let newCart = {}\n    newCart[itemCode] = { qty: 1, price, name, variant, image }\n\n    setCart(newCart)\n    saveCart(newCart)\n    router.push('/checkout')\n  }\n\n  return (\n    <>\n      {key && <Header\n        logout={logout}\n        key={key}\n        user={user}\n        cart={cart}\n        addToCart={addToCart}\n        removeFromCart={removeFromCart}\n        deleteFromCart={deleteFromCart}\n        clearCart={clearCart}\n        subTotal={subTotal}\n        toggleCart={toggleCart}\n      />}\n      <div\n        ref={ref}\n        className={`cart-sideBar shadow-2xl overflow-y-scroll fixed top-0 bottom-0 right-0 w-2/5 cardWidth catoBack indexZMax transform transition-transform ${Object.keys(cart).length !== 0 ? \"translate-x-0\" : \"translate-x-full\"\n          }`}\n      >\n        <div\n          onClick={toggleCart}\n          className=\"close absolute top-3 right-3 cursor-pointer text-3xl text-gray-600\"\n        >\n          <CgClose />\n        </div>\n        <div className=\"products flex flex-col w-full bg-white text-sm pt-8\">\n          {Object.keys(cart).length == 0 && (\n            <div className=\"flex justify-center text-4xl text-green-700 py-10 items-center border-t border-b border-gray-200\">\n              Your cart is Empty...!\n            </div>\n          )}\n          <p className=\"text-2xl font-normal text-gray-800 border-b border-gray-200 rounded-sm py-2 px-5 shadow-sm\">\n            Your Item\n          </p>\n          {Object.keys(cart).map((k) => {\n            return (\n              <div\n                key={k}\n                className=\"product flex flex-row w-full border-b-2 border-gray-300 p-3\"\n              >\n                <div className=\"product-image w-36 flex justify-center imageProd\">\n                  <img alt={cart[k].name} src={cart[k].image} />\n                </div>\n                <div className=\"product-text flex pl-5 flex-col\">\n                  <h1 className=\"text-xl font-medium\">{cart[k].name}</h1>\n                  <p className=\"text-lg\">{cart[k].variant}</p>\n                  <div className=\"impTool mt-4 flex flex-row\">\n                    <div className=\"qytselet relative flex border-r border-gray-200 px-3 items-center\">\n                      <AiOutlineMinusCircle\n                        onClick={() => {\n                          removeFromCart(\n                            k,\n                            1,\n                            cart[k].price,\n                            cart[k].name,\n                            cart[k].variant,\n                            cart[k].image\n                          );\n                        }}\n                        className=\"text-3xl font-normal cursor-pointer mr-2\"\n                      />\n                      <div className=\"qyantity w-11 rounded-sm text-center text-base h-7 border border-gray-600\">\n                        {cart[k].qty}\n                      </div>\n                      <AiOutlinePlusCircle\n                        onClick={() => {\n                          addToCart(\n                            k,\n                            1,\n                            cart[k].price,\n                            cart[k].name,\n                            cart[k].variant,\n                            cart[k].image\n                          );\n                        }}\n                        className=\"text-3xl font-normal cursor-pointer ml-2\"\n                      />\n                    </div>\n                    <div className=\"qytselet relative flex border-r border-gray-200 text-green-700 cursor-pointer hover:bg-gray-100 font-medium px-3 items-center\">\n                      <p onClick={() => {\n                        deleteFromCart(\n                          k,\n                          1,\n                          cart[k].price,\n                          cart[k].name,\n                          cart[k].variant,\n                          cart[k].image\n                        );\n                      }}>Delete</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"flex items-center justify-between px-5\">\n            <button\n              onClick={clearCart}\n              className=\"flex text-white font-medium text-sm rounded-full bg-red-700 justify-center w-28 my-2  py-2 hover:text-gray-800 hover:bg-white border transition-all border-red-700\"\n            >\n              <p>Clear Cart</p>\n            </button>\n            <div className=\"subtotal text-2xl text-gray-700 font-medium\">\n              Subtotal : ₹{subTotal}\n            </div>\n          </div>\n          <div className=\"flex justify-end\">\n            <Link href={\"../checkout\"}>\n              <button\n                onClick={toggleCart}\n                className=\"flex text-white font-medium text-sm rounded-full bg-green-700 justify-center px-5 mb-4 mr-3 items-center py-2 hover:text-gray-800 hover:bg-white border transition-all border-green-700\"\n              >\n                <p>Go to Cart </p>\n                <span className=\"text-lg pl-2 font-medium\">\n                  <AiOutlineShoppingCart />\n                </span>\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <LoadingBar\n        color='#045c15'\n        progress={progress}\n        waitingTime={400}\n        onLoaderFinished={() => setProgress(0)}\n      />\n      <Component\n        cart={cart}\n        buyNow={buyNow}\n        addToCart={addToCart}\n        removeFromCart={removeFromCart}\n        deleteFromCart={deleteFromCart}\n        clearCart={clearCart}\n        subTotal={subTotal}\n        toggleCart={toggleCart}\n        {...pageProps}\n      />\n      <Footer />\n    </>\n  );\n}\n\nexport default MyApp;\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\shop.js",["260"],[],"import React from \"react\";\r\nimport Image from \"next/image\";\r\nimport Head from 'next/head'\r\nimport Link from \"next/link\";\r\nimport Product from \"../modal/Product\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst Shop = ({ products }) => {\r\n  // console.log(products);\r\n  return (\r\n    <div className=\"text-gray-600 body-font catoBack relative\">\r\n      <Head>\r\n        <title>Fresh Frveg - Shop Products</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <section className=\"flex flex-row\">\r\n        {/* <div className=\"filter-side w-1/5 bg-white m-1\">Hello</div> */}\r\n        <div className=\"product-side w-90 mx-auto\">\r\n          <div className=\"shop-title w-96 shadow-md shopCat my-5 text-center p-3 m-auto background text-white text-3xl rounded-sm\">\r\n            Shop by Chatogary\r\n          </div>\r\n          {Object.keys(products).length == 0 && <div className=\"flex justify-center items-center text-xl text-gray-700 font-medium\">Sorry, all the item are currently out of stock. New stock coming soon. Stay Tuned!</div>}\r\n          <div className=\"product-item grid grid-cols-6 productsIt gap-3 my-5 justify-center items-center\">\r\n            {products.map((item) => {\r\n              return (\r\n                <Link\r\n                  passHref={true}\r\n                  key={item._id}\r\n                  href={`/products/${item.slug}`}\r\n                >\r\n                  <div className=\"product-box relative productSize hover:bg-gray-50 bg-white flex flex-col items-center justify-center border rounded-sm tranAnimaS shadow-sm hover:shadow-xl hover:border-gray-200 border-gray-100 cursor-pointer\">\r\n                    {item.availableQty == 0 && <div className=\"absolute font-medium text-gray-700 flex justify-center items-center w-full py-2 tranbackgr z-10 text-2xl mt-6\">Out of Stock!</div>}\r\n                    <div className=\"product-image w-36 h-40 overflow-hidden flex items-center justify-center\">\r\n                      <img className=\"scale\" src={`/${item.img}`} alt={item.title} />\r\n                    </div>\r\n                    <div className=\"product-text text-left self-start w-full pl-3\">\r\n                      <h2 className=\"text-base\">{item.category}</h2>\r\n                      <div className=\"product-price flex justify-between items-center\">\r\n                        <div className=\"div\">\r\n                          <h1 className=\"text-xl text-gray-900 font-medium\">\r\n                            {item.title}\r\n                          </h1>\r\n                          <p className=\"text-sm text-gray-900\">\r\n                            {item.size}\r\n                          </p>\r\n                          <p className=\"text-base text-gray-900 font-medium pb-1\">\r\n                            ₹{item.price}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"shop spin text-gray-600 text-2xl pr-3\">\r\n                          <AiOutlineShoppingCart />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n  if (!mongoose.connections[0].readyState) {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n  }\r\n  let products = await Product.find();\r\n  return {\r\n    props: { products: JSON.parse(JSON.stringify(products)) },\r\n  };\r\n}\r\n\r\nexport default Shop;\r\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\pincode.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\preview.js",["261"],[],"import React from 'react'\r\nimport Link from 'next/link';\r\nimport Head from 'next/head'\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst preview = ({ cart, addToCart, removeFromCart, clearCart, subTotal, deleteFromCart }) => {\r\n  return (<>\r\n    <Head>\r\n      <title>Fresh Frveg - Preview</title>\r\n      <meta\r\n        name=\"description\"\r\n        content=\"Shop fresh Fruits and vegetables online\"\r\n      />\r\n      <link rel=\"icon\" href=\"/favicon.ico\" />\r\n    </Head>\r\n    <div className='catoBack flex'>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"checkout-title PreBox my-8 mx-5 w-full flex flex-row prevewCol\">\r\n        <div className='left-side letfWidth bg-white w-4/5 text-3xl text-gray-800 border border-gray-200 rounded-sm py-8 px-5 shadow-sm'>\r\n          <p className='headingPr'>Shopping List</p>\r\n          <div className=\"products flex flex-col w-full text-sm mt-8\">\r\n            <div className='flex justify-between items-center'>\r\n              <div className=\"price-text flex justify-start px-4 text-base\">Item</div>\r\n              <div className=\"price-text flex justify-end px-4 text-base\">Price</div>\r\n            </div>\r\n            {\r\n              Object.keys(cart).length == 0 && <div className='flex justify-center text-4xl text-green-700 py-10 items-center border-t border-b border-gray-200'>Your cart is Empty...!</div>\r\n            }\r\n            {Object.keys(cart).map((k) => {\r\n              return <div key={k} className=\"product flex flex-row w-full border-t-2 border-b-2 border-gray-200 p-3\">\r\n                <div className=\"product-image w-36 flex justify-center imageProd mr-4\">\r\n                  <img alt={cart[k].name} src={cart[k].image} />\r\n                </div>\r\n                <div className=\"product-text w-2/4 flex justify-start flex-col\">\r\n                  <h1 className='text-2xl headPre font-medium'>{cart[k].name}</h1>\r\n                  <p className='text-lg'>{cart[k].variant}</p>\r\n                  <p className='text-sm text-green-700 font-medium'>In stock</p>\r\n                  <div className=\"impTool mt-4 flex flex-row\">\r\n                    <div className=\"qytselet relative flex border-r border-gray-200 px-3 items-center\">\r\n                      <AiOutlineMinusCircle onClick={() => { removeFromCart(k, 1, cart[k].price, cart[k].name, cart[k].variant, cart[k].image) }} className='text-3xl font-normal cursor-pointer mr-2' />\r\n                      <div className=\"qyantity w-11 rounded-sm text-center text-base h-7 border border-gray-600\">{cart[k].qty}</div>\r\n                      <AiOutlinePlusCircle onClick={() => { addToCart(k, 1, cart[k].price, cart[k].name, cart[k].variant, cart[k].image) }} className='text-3xl font-normal cursor-pointer ml-2' />\r\n                    </div>\r\n                    <div className=\"qytselet relative flex border-r border-gray-200 text-green-700 cursor-pointer hover:bg-gray-100 font-medium px-3 items-center\">\r\n                      <p onClick={() => { deleteFromCart(k, 1, cart[k].price, cart[k].name, cart[k].variant, cart[k].image) }}>Delete</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"product-price flex justify-end\">\r\n                  <span className='text-2xl'>₹{cart[k].price}</span>\r\n                </div>\r\n              </div>\r\n            })}\r\n            <div className='flex justify-end'>\r\n              <button onClick={clearCart} className=\"flex text-white font-medium text-sm rounded-full bg-red-700 justify-center w-28 mt-5  py-2 hover:text-gray-800 hover:bg-white border transition-all border-red-700\"><p>Clear Cart</p></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='right-side bg-white w-1/5 rightWidth ml-5 border border-gray-200 rounded-sm py-8 px-5 shadow-sm h-72'>\r\n          <div className='flex justify-end items-center pb-2 text-3xl text-gray-800'>\r\n            <div className=\"subtotal pr-7 subJus\">Subtotal :</div>\r\n            <div className='flex justify-start'>₹{subTotal}</div>\r\n          </div>\r\n          <div className=\"subtotal text-xl text-gray-800 flex justify-end pt-3  border-b-2 pb-2 border-gray-200\">Delivery Charge : ₹40</div>\r\n          <div className=\"subtotal text-3xl text-gray-800 flex justify-end pt-10\">₹{subTotal === 0 ? subTotal : subTotal + 40}</div>\r\n          <div className=\"subtotal text-3xl text-gray-800 flex justify-end pt-3\"><Link href={'/checkout'}><button disabled={Object.keys(cart).length === 0} className=\"flex disabled:bg-green-500 hover:disabled:text-white disabled:cursor-default text-white font-medium text-sm rounded-full bg-green-700 w-full justify-center  py-2 hover:text-gray-800 hover:bg-white border transition-all border-green-700\"><p>CONTINUE</p></button></Link></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default preview;","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\addproducts.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\getproducts.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\updateproducts.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\forget.js",["262"],[],"import React from 'react'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport { VscLock } from \"react-icons/vsc\";\r\n\r\nconst Forget = () => {\r\n  const router = useRouter()\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      router.push('/')\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Fresh Frveg - Forget</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className='flex'>\r\n        <div className=\"login flex justify-center border-2 bg-white border-gray-200 shadow-md rounded-sm my-9 mx-auto\">\r\n          <div className=\"client-data flex flex-col w-full px-6 py-4\">\r\n            <p className=\"text-3xl pb-8 font-normal\">Forgot Password</p>\r\n            <div className=\"flex flex-col pb-3\">\r\n              <label htmlFor=\"client-p\" className=\"text-base font-normal pl-1 pb-1\">Email</label>\r\n              <input type=\"text\" id=\"client-p\" className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n            </div>\r\n            <p className='text-gray-500 pt-4 text-xs'>We will send you a text to your phone.</p>\r\n            <div className=\"text-3xl text-gray-800 flex justify-end border-b pb-2 border-gray-300 pt-3\">\r\n              <Link href={'/preview'}>\r\n                <button className=\"flex relative text-white font-medium text-sm rounded-full bg-green-700 w-full justify-center  py-2 hover:text-gray-800 hover:bg-white border transition-all border-green-700\"><p>CONTINUE</p>\r\n                  <span className=\"lock absolute flex justify-start text-lg pl-6 items-center w-full\"><VscLock /></span>\r\n                </button></Link></div>\r\n            <p className='text-green-700 font-medium'><Link href={\"/login\"}>Sign-In</Link></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Forget","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\signup.js",["263","264"],[],"import Link from \"next/link\";\r\nimport Head from 'next/head'\r\nimport React from \"react\";\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { VscLock } from \"react-icons/vsc\";\r\n\r\nconst Signup = () => {\r\n  const router = useRouter()\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [lodingS, setlodingS] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      router.push('/')\r\n    }\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name == 'name') {\r\n      setName(e.target.value)\r\n    }\r\n    if (e.target.name == 'email') {\r\n      setEmail(e.target.value.toLowerCase())\r\n    }\r\n    if (e.target.name == 'phone') {\r\n      setPhone(e.target.value)\r\n    }\r\n    if (e.target.name == 'password') {\r\n      setPassword(e.target.value)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    setlodingS(false)\r\n    e.preventDefault()\r\n    const data = { name, email, phone, password }\r\n    let res = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/signup`, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    let response = await res.json()\r\n\r\n    setName('')\r\n    setEmail('')\r\n    setPhone('')\r\n    setPassword('')\r\n    setlodingS(true)\r\n    if (response.success) {\r\n      toast.success('Your account have been created', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    else {\r\n      toast.error(response.error, {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Fresh Frveg - Signup</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className='flex relative'>\r\n        {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>}\r\n        <div className=\"login flex justify-center border-2 bg-white border-gray-300 shadow-md rounded-sm my-9 mx-auto\">\r\n          <div className=\"client-data flex flex-col w-full px-6 py-4\">\r\n            <p className=\"text-3xl pb-3 font-normal\">Create Account</p>\r\n            <form onSubmit={handleSubmit} method=\"POST\">\r\n              <div className=\"flex flex-col pb-5\">\r\n                <label htmlFor=\"name\" className=\"text-base font-normal pl-1 pb-1\">Your name</label>\r\n                <input value={name} onChange={handleChange} type=\"text\" name='name' id=\"name\" required autoComplete=\"name\" placeholder='First and last name' className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n              </div>\r\n              <div className=\"flex flex-col pb-5\">\r\n                <label htmlFor=\"email\" className=\"text-base font-normal pl-1 pb-1\">Email</label>\r\n                <input value={email} onChange={handleChange} type=\"email\" name='email' id=\"email\" required autoComplete=\"email\" placeholder='Email' className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n              </div>\r\n              <div className=\"flex flex-col pb-5\">\r\n                <label htmlFor=\"phone\" className=\"text-base font-normal pl-1 pb-1\">Mobile phone</label>\r\n                <input value={phone} onChange={handleChange} type=\"number\" name='phone' id=\"phone\" required autoComplete=\"phone\" placeholder='Mobile phone' className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n              </div>\r\n              <div className=\"flex flex-col pb-5\">\r\n                <label htmlFor=\"password\" className=\"text-base font-normal pl-1 pb-1\">Password</label>\r\n                <input value={password} onChange={handleChange} type=\"password\" name='password' id=\"password\" required autoComplete=\"password\" placeholder='At least 6 characters' className=\"p-1 shadow-inner text-gray-600 text-base border outline-none focus:border-green-700 border-gray-300\" />\r\n              </div>\r\n              <p className='text-gray-500 pt-4 text-xs'>We will send you a text to verify your phone.\r\n                Message and Data rates may apply</p>\r\n              <div className=\"text-3xl text-gray-800 flex justify-end border-b pb-2 border-gray-300 pt-3\"><button type=\"submit\" className=\" relative flex text-white font-medium text-sm rounded-full bg-green-700 w-full justify-center  py-2 hover:text-gray-800 hover:bg-white border transition-all border-green-700\">\r\n                {lodingS === false ? <p>WAIT</p> : <p>CONTINUE</p>}\r\n                <span className=\"lock absolute flex justify-start text-lg pl-6 items-center w-full\"><VscLock /></span>\r\n              </button></div>\r\n            </form>\r\n            <p className='text-gray-500 pt-2 text-sm'>Already have an account? <span className='text-green-700 font-medium'><Link href={\"/login\"}>Sign in</Link></span></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\account.js",["265","266","267"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { BsHandbag, BsTruck } from \"react-icons/bs\";\r\nimport { AiOutlineLock } from \"react-icons/ai\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\"\r\n\r\nconst Account = () => {\r\n  const router = useRouter()\r\n\r\n  const [name, setname] = useState(\"\")\r\n  const [phone, setphone] = useState(\"\")\r\n  const [pincode, setpincode] = useState(\"\")\r\n  const [address, setaddress] = useState(\"\")\r\n  const [landmark, setlandmark] = useState(\"\")\r\n  const [email, setemail] = useState(\"\")\r\n  const [user, setuser] = useState({ value: null })\r\n  const [mobilevalid, setmobilevalid] = useState(true)\r\n  const [validpincode, setvalidpincode] = useState(true)\r\n  const [currentPass, setcurrentPass] = useState(\"\")\r\n  const [newPass, setnewPass] = useState(\"\")\r\n  const [ReEnter, setReEnter] = useState(\"\")\r\n  const [dispayName, setdispayName] = useState(\"\")\r\n  const [lodingS, setlodingS] = useState(true)\r\n  const [lodingSS, setlodingSS] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const myuser = JSON.parse(localStorage.getItem(\"myuser\"))\r\n    if (!myuser) {\r\n      router.push('/')\r\n    }\r\n    if (myuser && myuser.token) {\r\n      setuser(myuser)\r\n      setemail(myuser.email)\r\n      fetchdata(myuser.token)\r\n      setdispayName(myuser.name)\r\n    }\r\n  }, [])\r\n\r\n  const fetchdata = async (token) => {\r\n    setlodingS(false)\r\n    let data = { token: token }\r\n    let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/getuser`, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    let res = await a.json()\r\n    setaddress(res.address)\r\n    setphone(res.phone)\r\n    setpincode(res.pincode)\r\n    setname(res.name)\r\n    setlandmark(res.landmark)\r\n    setlodingS(true)\r\n  }\r\n\r\n  const handleUserSubmit = async () => {\r\n    setlodingS(false)\r\n    let data = { token: user.token, address, pincode, phone, name, landmark }\r\n    let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/updateuser`, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    let res = await a.json()\r\n    setlodingS(true)\r\n    toast.success(\"Successfully Updated Details\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n  const handlePasswordSubmit = async () => {\r\n    setlodingSS(false)\r\n    if (newPass == ReEnter) {\r\n      let res;\r\n      if (newPass == ReEnter) {\r\n        let data = { token: user.token, ReEnter, newPass, currentPass }\r\n        let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/updatepassword`, {\r\n          method: 'POST', // or 'PUT'\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        })\r\n        res = await a.json()\r\n        setnewPass('')\r\n        setcurrentPass('')\r\n        setReEnter('')\r\n        setlodingSS(true)\r\n      }\r\n      else {\r\n        res = { success: false }\r\n      }\r\n      if (res.success) {\r\n        toast.success(\"Successfully Updated Password\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else {\r\n        toast.error(\"Wrong Password\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"New Password is not matching with Re-type Password\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleChange = async (e) => {\r\n    if (e.target.name == 'name') {\r\n      setname(e.target.value)\r\n    }\r\n    else if (e.target.name == 'phone') {\r\n      setphone(e.target.value)\r\n      setTimeout(() => {\r\n        if (e.target.value.length <= 9 || e.target.value.length >= 11) {\r\n          setmobilevalid(false)\r\n        }\r\n        else {\r\n          setmobilevalid(true)\r\n        }\r\n      }, 3000);\r\n    }\r\n    else if (e.target.name == 'pincode') {\r\n      setpincode(e.target.value)\r\n      setTimeout(() => {\r\n        if (e.target.value.length <= 5 || e.target.value.length >= 7) {\r\n          setvalidpincode(false)\r\n        }\r\n        else {\r\n          setvalidpincode(true)\r\n        }\r\n      }, 3000);\r\n    }\r\n    else if (e.target.name == 'address') {\r\n      setaddress(e.target.value)\r\n    }\r\n    else if (e.target.name == 'landmark') {\r\n      setlandmark(e.target.value)\r\n    }\r\n    else if (e.target.name == 'currentPass') {\r\n      setcurrentPass(e.target.value)\r\n    }\r\n    else if (e.target.name == 'newPass') {\r\n      setnewPass(e.target.value)\r\n    }\r\n    else if (e.target.name == 'newPass') {\r\n      setnewPass(e.target.value)\r\n    }\r\n    else if (e.target.name == 'ReEnter') {\r\n      setReEnter(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Fresh Frveg - Account</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <div className=\"catoBack flex\">\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={1000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={1000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n          {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>}\r\n        <div className=\"account-title accFlexCo my-5 mx-20 w-full flex flex-row relative\">\r\n          <div className=\"right-side w-1/4 mr-5 leftSideAccW\">\r\n            <div className=\"flex accLeftSideN accLeftSideNMB flex-row bg-white justify-start border border-gray-200 rounded-sm py-5 px-5 shadow-sm h-min\">\r\n              <div className=\"image bg-green-500 rounded-full w-16 h-16 overflow-hidden mr-5\"><div className=\"pt-1\"><Image src={\"/person.png\"} width={60} height={60} /></div></div>\r\n              <div className=\"Account\">\r\n                <div className=\"text-base text-gray-800 flex\">Hello,</div>\r\n                <div className=\"text-xl text-gray-800 flex\">{dispayName}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex accLeftSideN flex-row bg-white justify-start border border-gray-200 rounded-sm mt-5 py-5 px-5 shadow-sm h-min\">\r\n              <div className=\"Account\">\r\n                <ul>\r\n                  <Link href={'/yourorder'}><a><li className=\"text-xl flex flex-row items-center pb-3\"><BsHandbag className=\"ml-2 mr-4 text-xl\" /><span>My Orders</span></li></a></Link>\r\n                  <Link href={'#changepassword'}><a><li className=\"text-xl flex cursor-pointer flex-row items-center\"><AiOutlineLock className=\"ml-2 mr-4 text-xl\" /><span>Change Password</span></li></a></Link>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"left-side w-4/5 rightSideAccW\">\r\n            <div className=\"persnalD flex flex-col bg-white justify-start border border-gray-200 rounded-sm py-5 px-10 shadow-sm h-min\">\r\n              <p className=\"border-b pb-2 border-gray-200 text-3xl\">Personal Information</p>\r\n              <div className=\"accountInpuW personal-d pl-6 py-8\">\r\n                <div className=\"personal-d grid grid-cols-2 gap-4\">\r\n                  <div className=\"flex flex-col\">\r\n                    <label htmlFor=\"name\" className=\"text-base font-normal pl-1\">Name</label>\r\n                    <input value={name} onChange={handleChange} type=\"text\" name='name' id=\"name\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                  </div>\r\n                  <div className=\"flex flex-col relative\">\r\n                    <label htmlFor=\"phone\" className=\"text-base font-normal pl-1\">10-digit mobile number</label>\r\n                    <input value={phone} onChange={handleChange} type=\"number\" name='phone' id=\"phone\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                    {mobilevalid === false && <span className=\"text-red-700 text-sm absolute -bottom-5 right-0\">Enter a valid Mobile number</span>}\r\n                  </div>\r\n                  <div className=\"flex flex-col relative\">\r\n                    <label htmlFor=\"pincode\" className=\"text-base font-normal pl-1\">Pincode</label>\r\n                    <input value={pincode} onChange={handleChange} type=\"number\" name='pincode' id=\"pincode\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                    {validpincode === false && <span className=\"text-red-700 text-sm absolute -bottom-5 right-0\">Ender a valid Pincode</span>}\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label htmlFor=\"email\" className=\"text-base font-normal pl-1\">Email</label>\r\n                    {user && user.token ? <input value={user.email} readOnly type=\"email\" name='email' id=\"email\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" /> :\r\n                      <input value={email} onChange={handleChange} type=\"email\" name='email' id=\"email\" className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />}\r\n                  </div>\r\n                </div>\r\n                <div className=\"my-4\" id=\"changepassword\">\r\n                  <label htmlFor=\"address\" className=\"text-base font-normal pl-1\">Address (Area and Street)</label>\r\n                  <textarea value={address} onChange={handleChange} type=\"text\" name='address' id=\"address\" cols=\"57\" required rows=\"3\" className=\"p-3 w-full focus:border-green-700 resize-none border outline-none input-bck text-gray-600 text-base border-gray-200\" />\r\n                </div>\r\n                <div className=\"personal-d grid grid-cols-2 gap-3\">\r\n                  <div className=\"flex flex-col\">\r\n                    <label htmlFor=\"landmark\" className=\"text-base font-normal pl-1\">Landmark</label>\r\n                    <input value={landmark} onChange={handleChange} type=\"text\" name='landmark' id=\"landmark\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                  </div>\r\n                </div>\r\n                <button onClick={handleUserSubmit} className='rounded-full bg-green-700 text-lg px-12 mt-8 py-2 hover:bg-white text-white hover:text-gray-800 border transition-all border-green-700'>{lodingS === false ? <p>Updating</p> : <p>Update</p>}</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"passwordChng flex flex-col bg-white justify-start border mt-5 border-gray-200 rounded-sm py-5 px-10 shadow-sm h-min\">\r\n              <p className=\"border-b pb-2 border-gray-200 text-3xl\">Change Password</p>\r\n              <div className=\"accountInpuW pl-6 py-8\">\r\n                <div className=\"personal-d grid grid-cols-2 gap-4\">\r\n                  <div className=\"flex flex-col\">\r\n                    <label htmlFor=\"currentPass\" className=\"text-base font-normal pl-1\">Type Current Password</label>\r\n                    <input value={currentPass} onChange={handleChange} type=\"password\" name='currentPass' id=\"currentPass\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                  </div>\r\n                  <div className=\"div\"></div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label htmlFor=\"newPass\" className=\"text-base font-normal pl-1\">Type New Password</label>\r\n                    <input value={newPass} onChange={handleChange} type=\"password\" name='newPass' id=\"newPass\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                    <label htmlFor=\"ReEnter\" className=\"text-base font-normal pl-1\">Re-type New Password</label>\r\n                    <input type=\"password\" onChange={handleChange} value={ReEnter} name='ReEnter' id=\"ReEnter\" required className=\"p-2 input-bck text-gray-600 text-base border outline-none focus:border-green-700 border-gray-200\" />\r\n                  </div>\r\n                </div>\r\n                <button onClick={handlePasswordSubmit} className='rounded-full bg-green-700 text-lg px-8 mt-10 py-2 hover:bg-white text-white hover:text-gray-800 border transition-all border-green-700'>{lodingSS === false ? <p>Changing Password</p> : <p>Change Password</p>}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Account","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\getuser.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\login.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\myorders.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\posttransaction.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\pretransaction.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\signup.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\updatepassword.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\updateuser.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\Fruits.js",["268"],[],"import React from 'react'\r\nimport Image from \"next/image\";\r\nimport Head from 'next/head'\r\nimport Link from \"next/link\";\r\nimport Product from \"../modal/Product\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst Fruits = ({ products }) => {\r\n  return (\r\n    <div className=\"text-gray-600 body-font catoBack relative\">\r\n      <Head>\r\n        <title>Fresh Frveg - Fruits</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <section className=\"flex flex-row\">\r\n        {/* <div className=\"filter-side w-1/5 bg-white m-1\">Hello</div> */}\r\n        <div className=\"product-side w-90 mx-auto\">\r\n          <div className=\"shop-title w-96 shadow-md shopCat my-5 text-center p-3 m-auto background text-white text-3xl rounded-sm\">\r\n            Shop Fruits\r\n          </div>\r\n          {Object.keys(products).length == 0 && <div className=\"flex justify-center items-center text-xl text-gray-700 font-medium\">Sorry, all the item are currently out of stock. New stock coming soon. Stay Tuned!</div>}\r\n          <div className=\"product-item grid grid-cols-6 productsIt gap-3 my-5 justify-center items-center\">\r\n            {products.map((item) => {\r\n              return (\r\n                <Link\r\n                  passHref={true}\r\n                  key={item._id}\r\n                  href={`/products/${item.slug}`}\r\n                >\r\n                  <div className=\"product-box productSize relative hover:bg-gray-50 bg-white flex flex-col items-center justify-center border rounded-sm tranAnimaS shadow-sm hover:shadow-xl hover:border-gray-200 border-gray-100 cursor-pointer\">\r\n                    {item.availableQty == 0 && <div className=\"absolute flex justify-center items-center w-full py-2 text-gray-700 font-medium tranbackgr z-10 text-2xl mt-6\">Out of Stock!</div>}\r\n                    <div className=\"product-image w-36 h-40 overflow-hidden flex items-center justify-center\">\r\n                      <img className=\"scale\" src={`/${item.img}`} alt={item.title} />\r\n                    </div>\r\n                    <div className=\"product-text text-left self-start w-full pl-3\">\r\n                      <h2 className=\"text-base\">{item.category}</h2>\r\n                      <div className=\"product-price flex justify-between items-center\">\r\n                        <div className=\"div\">\r\n                          <h1 className=\"text-xl text-gray-900 font-medium\">\r\n                            {item.title}\r\n                          </h1>\r\n                          <p className=\"text-sm text-gray-900\">\r\n                            {item.size}\r\n                          </p>\r\n                          <p className=\"text-base text-gray-900 font-medium pb-1\">\r\n                            ₹{item.price}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"shop spin text-gray-600 text-2xl pr-3\">\r\n                          <AiOutlineShoppingCart />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  if (!mongoose.connections[0].readyState) {\r\n    await mongoose.connect(process.env.MONGO_URI);\r\n  }\r\n  let products = await Product.find({ category: 'Fruits' });\r\n  return {\r\n    props: { products: JSON.parse(JSON.stringify(products)) },\r\n  };\r\n}\r\n\r\n\r\nexport default Fruits","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\yourorder.js",["269","270","271"],[],"import { React, useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router';\r\nimport Image from 'next/image'\r\nimport Link from 'next/link';\r\nimport Head from \"next/head\"\r\n\r\n\r\nconst YourOrder = () => {\r\n  const router = useRouter()\r\n  const [orders, setorders] = useState([])\r\n  const [lodingS, setlodingS] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      setlodingS(false)\r\n      let a = await fetch(`${process.env.NEXT_PUBLIC_HOST}/api/myorders`, {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token: JSON.parse(localStorage.getItem('myuser')).token }),\r\n      })\r\n      let res = await a.json()\r\n      setorders(res.orders)\r\n      setlodingS(true)\r\n    }\r\n    if (!localStorage.getItem('myuser')) {\r\n      router.push('/')\r\n    }\r\n    else {\r\n      fetchOrders()\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className='catoBack flex relative'>\r\n      <Head>\r\n        <title>Fresh Frveg - Orders</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop fresh Fruits and vegetables online\"\r\n        />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      {lodingS === false && <span className=\"fixed flex justify-center items-center text-green-900 text-lg top-1/2 w-full\"><Image src={\"/loader.gif\"} width={50} height={50} /></span>}\r\n      <div className=\"checkout-title my-8 mx-5 w-full flex flex-row\">\r\n        {/* <div className='left-side bg-white w-1/5 mr-5 border border-gray-200 rounded-sm py-5 px-5 shadow-sm h-72'>\r\n          <div className=\"subtotal text-3xl text-gray-800 flex justify-start pb-2\">Filters</div>\r\n        </div> */}\r\n        <div className='right-side mx-auto bg-white yourOrderW text-3xl text-gray-800 border border-gray-200 rounded-sm py-8 px-5 shadow-sm'>\r\n          <p>Your Order List</p>\r\n          <div className=\"products flex flex-col w-full text-sm mt-8\">\r\n            {orders.length == 0 && <div className=\"flex justify-center text-4xl text-green-700 py-20 items-center border-t border-b border-gray-200\">\r\n              Your Order List is Empty....\r\n            </div>}\r\n            {orders.map((item) => {\r\n              return <div key={item._id} className=\"product flex yourOrderCol justify-center flex-row w-full border-t-2 border-b-2 border-gray-200 p-3 hover:bg-gray-100\">\r\n                <div className=\"product-image w-48 flex justify-center items-center pr-8\">\r\n                  <img alt=\"ecommerce\" className=\"w-48 h-36 orderImage\" src={'/basket.png'} />\r\n                </div>\r\n                <div className=\"product-text yourOrderWT flex justify-start flex-col\">\r\n                  <h1 className='text-2xl pb-1 font-medium'>{item.name}</h1>\r\n                  <p className='text-lg pb-1'>Order id :  <span>#{item.orderId}</span></p>\r\n                  <p className='text-lg pb-1'>{item.createdAt.substring(0, 10)}</p>\r\n                  <p className='text-lg pb-1'>Payment Status: <span className='font-medium'>{item.status}</span></p>\r\n                </div>\r\n                <div className=\"product-price w-1/6 flex justify-start\">\r\n                  <span className='text-2xl'>₹{parseInt(item.amount) + 40}</span>\r\n                </div>\r\n                <div className=\"product-price\">\r\n                  <Link href={'/order?id=' + item._id}><button className='font-medium rounded-full bg-green-700 w-40 text-lg px-8 mt-10 py-2 hover:bg-white text-white hover:text-gray-800 border transition-all border-green-700'><h6>Details</h6></button></Link>\r\n                </div>\r\n              </div>\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default YourOrder","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\componenat\\Header.js",["272"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport { RiAccountCircleLine } from \"react-icons/ri\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { TbPhoneCall } from \"react-icons/tb\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { MdSupervisorAccount } from \"react-icons/md\";\r\nimport { CgLogOff, CgClose } from \"react-icons/cg\";\r\nimport { BsHandbag, BsTruck } from \"react-icons/bs\";\r\nimport { BiMenuAltLeft } from \"react-icons/bi\";\r\n\r\nfunction Header({ logout, user, cart, addToCart, removeFromCart, clearCart, subTotal }) {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [dropdown, setdropdown] = useState(false)\r\n  const [menudrop, setmenudrop] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 100) {\r\n        setIsScrolled(true);\r\n      } else {\r\n        setIsScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setmenudrop(!menudrop)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <header\r\n      className={`${isScrolled && \"tranAnima fixed z-50 top-0 right-0 left-0\"}`}\r\n    >\r\n      <div className=\"menuBar shadow-lg border-b border-green-800\">\r\n        <div className=\"offer-menu bg-green-700 flex flex-row justify-end p-1 disNone\">\r\n          <div className=\"cart border-r-2 border-gray-200 mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\">\r\n            <TbPhoneCall className=\"pr-1\" />\r\n            <span className=\"text-sm pr-2\">+91 9999557786</span>\r\n          </div>\r\n          <div className=\"cart border-r-2 border-gray-200 mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\">\r\n            <BiRupee className=\"pr-1\" />\r\n            <span className=\"text-sm pr-2\">Sell on Brownbag</span>\r\n          </div>\r\n          <div className=\"cart border-r-2 border-gray-200 mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\">\r\n            <MdSupervisorAccount className=\"pr-1\" />\r\n            <span className=\"text-sm pr-2\">+91 Franchise</span>\r\n          </div>\r\n          <div className=\"cart mx-1 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all flex flex-row items-center\">\r\n            <BsTruck className=\"pr-1\" />\r\n            <span className=\"text-sm pr-2\">Need Delivery Partner</span>\r\n          </div>\r\n        </div>\r\n        <div className={menudrop ? \"background relative flex justify-between  hightNav shadow-sm transitionn shadow-gray-300 ... z-40 ...\" : \"background  transitionn impLink relative flex justify-between shadow-sm shadow-gray-300 ... z-40 ...\"}>\r\n          {/* <div className=\"cart mx-2 text-2xl absolute top-3 left-3 hidden cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all\">\r\n            <CgClose />\r\n          </div> */}\r\n          <div className=\"nav flex justify-center items-center navbar\">\r\n            <div className={menudrop ? \"mx-6 cursor-pointer logo top-0\" : \"mx-6 cursor-pointer logo top-0\"}>\r\n              <Link href={\"/\"}>\r\n                <Image src=\"/logo.png\" width={100} height={70} />\r\n              </Link>\r\n            </div>\r\n            <ul className={menudrop ? \"flex justify-center menubar mt-20 overflow-hidden py-2 menuRs w-full\" : \"flex justify-center menubar overflow-hidden menuR\"}>\r\n              <li className=\"mx-6 text-lg font-normal paddingM tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\">\r\n                <Link href=\"/\">\r\n                  <a>Home</a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"mx-6 text-lg font-normal paddingM tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\">\r\n                <Link href=\"/about\">\r\n                  <a>About</a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"mx-6 text-lg font-normal paddingM tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\">\r\n                <Link href=\"/shop\">\r\n                  <a>Shop</a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"mx-6 text-lg font-normal paddingM tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\">\r\n                <Link href=\"/Vegitables\">\r\n                  <a>Vegitables</a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"mx-6 text-lg font-normal paddingM tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\">\r\n                <Link href=\"/Fruits\">\r\n                  <a>Fruits</a>\r\n                </Link>\r\n              </li>\r\n              <li className=\"mx-6 text-lg font-normal paddingM tracking-widest text-slate-50 hover:bg-clip-text hover:text-transparent hover:bg-gradient-to-r from-green-200 to-green-300 transition-all\">\r\n                <Link href=\"/contact\">\r\n                  <a>Contact</a>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"impLink flex justify-center my-auto h-min marginZH\">\r\n            <div className=\"flex items-center\">\r\n              <Link href={\"../preview\"}>\r\n                <div className=\"cart mx-2 text-2xl cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all\">\r\n                  <AiOutlineShoppingCart />\r\n                </div>\r\n              </Link>\r\n              <div className=\"cart mx-4 text-2xl cursor-pointer relative text-slate-50\">\r\n                {user && user.value && <RiAccountCircleLine onMouseOver={() => { setdropdown(true) }} onMouseLeave={() => { setdropdown(false) }} />}\r\n                {dropdown && <div className=\"dropdown absolute -right-2 top-8 w-44 px-2  rounded-sm bg-white z-50 shadow-lg\" onMouseOver={() => { setdropdown(true) }} onMouseLeave={() => { setdropdown(false) }}>\r\n                  <ul>\r\n                    <Link href={'/account'}><a><li className=\"text-base flex flex-row items-center border-green-300 text-green-700 py-2 hover:text-green-500\"><RiAccountCircleLine className=\"mx-2 text-lg\" /><span>My Profile</span></li></a></Link>\r\n                    <Link href={'/yourorder'}><a><li className=\"text-base flex flex-row items-center border-t border-green-300 text-green-700 py-2 hover:text-green-500\"><BsHandbag className=\"mx-2 text-lg\" /><span>Orders</span></li></a></Link>\r\n                    <li onClick={logout} className=\"text-base border-t flex flex-row items-center  border-green-300 text-green-700 py-2 hover:text-green-500\"><CgLogOff className=\"mx-2 text-lg\" /><span>Logout</span></li>\r\n                  </ul>\r\n                </div>}\r\n                {user && !user.value && <Link href={\"/login\"}><a>\r\n                  <button className=\"text-base flex items-center p-2 px-4 rounded-md bg-green-900 cursor-pointer text-slate-50 hover:text-green-200 transition-all\">Login</button>\r\n                </a></Link>}\r\n              </div>\r\n              <Link href={'/search'}><input\r\n                type=\"text\"\r\n                readOnly\r\n                className=\"p-2 lg:w-40 widthIn -mr-10 xl:w-80 rounded-md text-gray-600 outline-none\"\r\n                placeholder=\"Search\"\r\n              />\r\n              </Link>\r\n              <div className=\"cart mr-4 sertchB text-2xl p-2 rounded-l-none rounded-md bg-green-900 cursor-pointer font-medium text-slate-50 hover:text-green-200 transition-all\">\r\n                <Link href={'/search'}><AiOutlineSearch /></Link>\r\n              </div>\r\n              <div className=\"hidden Nblock\">\r\n                <div className=\"cart mx-2 text-3xl cursor-pointer font-medium text-slate-50 transitionn hover:text-green-200 transition-all\">\r\n                  <a onClick={toggleMenu}>{menudrop ? <CgClose /> : <BiMenuAltLeft />}</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </header >\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\addcoupon.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\addproduct.js",["273","274"],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\coupons.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\index.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\order.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\products.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\admin\\updateproduct.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\addquery.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\api\\getorder.js",[],[],"D:\\Websiteeeeeeeeee\\S Project\\online_shop\\pages\\search.js",["275"],[],"import React, { useState } from \"react\";\r\nimport Head from 'next/head'\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport Product from \"../modal/Product\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst Search = ({ products }) => {\r\n    const [search, setsearch] = useState('')\r\n    const handleChange = async (e) => {\r\n        e.preventDefault()\r\n        if (e.target.name == 'search') {\r\n            setsearch(e.target.value)\r\n        }\r\n    }\r\n    // console.log(products);\r\n    return (\r\n        <div className=\"text-gray-600 body-font catoBack relative\">\r\n            <Head>\r\n                <title>Fresh Frveg - Search Products</title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Shop fresh Fruits and vegetables online\"\r\n                />\r\n                <link rel=\"icon\" href=\"/favicon.ico\" />\r\n            </Head>\r\n            <section className=\"flex flex-row\">\r\n                {/* <div className=\"filter-side w-1/5 bg-white m-1\">Hello</div> */}\r\n                <div className=\"product-side w-90 mx-auto mt-5\">\r\n                    <input value={search} onChange={handleChange} type=\"text\" name=\"search\" id=\"search\" className=\"p-4 w-10/12 mb-10 mx-auto shadow-md text-xl flex rounded-sm text-gray-600 outline-none\" placeholder=\"Search\" />\r\n                    <div className=\"product-item grid grid-cols-6 productsIt gap-3 my-5 justify-center items-center\">\r\n                        {products.filter((val) => {\r\n                            if (search == \"\") {\r\n                                return val;\r\n                            } else if (val.title.toLowerCase().includes(search.toLowerCase())) {\r\n                                return val;\r\n                            }\r\n                        }).map((item) => {\r\n                            return (\r\n                                <Link\r\n                                    passHref={true}\r\n                                    key={item._id}\r\n                                    href={`/products/${item.slug}`}\r\n                                >\r\n                                    <div className=\"product-box relative productSize  hover:bg-gray-50 bg-white flex flex-col items-center justify-center border rounded-sm tranAnimaS shadow-sm hover:shadow-xl hover:border-gray-200 border-gray-100 cursor-pointer\">\r\n                                        {item.availableQty == 0 && <div className=\"absolute font-medium text-gray-700 flex justify-center items-center w-full py-2 tranbackgr z-10 text-2xl mt-6\">Out of Stock!</div>}\r\n                                        <div className=\"product-image w-36 h-40 overflow-hidden flex items-center justify-center\">\r\n                                            <img className=\"scale\" src={`/${item.img}`} alt={item.title} />\r\n                                        </div>\r\n                                        <div className=\"product-text text-left self-start w-full pl-3\">\r\n                                            <h2 className=\"text-base\">{item.category}</h2>\r\n                                            <div className=\"product-price flex justify-between items-center\">\r\n                                                <div className=\"div\">\r\n                                                    <h1 className=\"text-xl text-gray-900 font-medium\">\r\n                                                        {item.title}\r\n                                                    </h1>\r\n                                                    <p className=\"text-sm text-gray-900\">\r\n                                                        {item.size}\r\n                                                    </p>\r\n                                                    <p className=\"text-base text-gray-900 font-medium pb-1\">\r\n                                                        ₹{item.price}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div className=\"shop spin text-gray-600 text-2xl pr-3\">\r\n                                                    <AiOutlineShoppingCart />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n    if (!mongoose.connections[0].readyState) {\r\n        await mongoose.connect(process.env.MONGO_URI);\r\n    }\r\n    let products = await Product.find();\r\n    return {\r\n        props: { products: JSON.parse(JSON.stringify(products)) },\r\n    };\r\n}\r\n\r\nexport default Search;\r\n",{"ruleId":"276","severity":1,"message":"277","line":19,"column":11,"nodeType":"278","endLine":19,"endColumn":60},{"ruleId":"279","severity":1,"message":"280","line":36,"column":8,"nodeType":"281","endLine":36,"endColumn":10,"suggestions":"282"},{"ruleId":"276","severity":1,"message":"277","line":211,"column":138,"nodeType":"278","endLine":211,"endColumn":190},{"ruleId":"283","severity":1,"message":"284","line":276,"column":45,"nodeType":"278","endLine":276,"endColumn":91},{"ruleId":"276","severity":1,"message":"277","line":13,"column":44,"nodeType":"278","endLine":13,"endColumn":93},{"ruleId":"276","severity":1,"message":"277","line":33,"column":38,"nodeType":"278","endLine":33,"endColumn":87},{"ruleId":"276","severity":1,"message":"277","line":90,"column":129,"nodeType":"278","endLine":90,"endColumn":181},{"ruleId":"276","severity":1,"message":"277","line":45,"column":15,"nodeType":"278","endLine":45,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":50,"column":15,"nodeType":"278","endLine":50,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":55,"column":15,"nodeType":"278","endLine":55,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":60,"column":15,"nodeType":"278","endLine":60,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":65,"column":15,"nodeType":"278","endLine":65,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":70,"column":15,"nodeType":"278","endLine":70,"endColumn":64},{"ruleId":"283","severity":1,"message":"284","line":77,"column":13,"nodeType":"278","endLine":77,"endColumn":50},{"ruleId":"276","severity":1,"message":"277","line":84,"column":13,"nodeType":"278","endLine":84,"endColumn":66},{"ruleId":"276","severity":1,"message":"277","line":91,"column":13,"nodeType":"278","endLine":91,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":97,"column":13,"nodeType":"278","endLine":97,"endColumn":66},{"ruleId":"276","severity":1,"message":"277","line":103,"column":13,"nodeType":"278","endLine":103,"endColumn":66},{"ruleId":"283","severity":1,"message":"284","line":156,"column":25,"nodeType":"278","endLine":156,"endColumn":94},{"ruleId":"283","severity":1,"message":"284","line":206,"column":25,"nodeType":"278","endLine":206,"endColumn":94},{"ruleId":"279","severity":1,"message":"285","line":22,"column":6,"nodeType":"281","endLine":22,"endColumn":8,"suggestions":"286"},{"ruleId":"276","severity":1,"message":"277","line":88,"column":126,"nodeType":"278","endLine":88,"endColumn":178},{"ruleId":"279","severity":1,"message":"287","line":25,"column":6,"nodeType":"281","endLine":25,"endColumn":8,"suggestions":"288"},{"ruleId":"276","severity":1,"message":"277","line":65,"column":19,"nodeType":"278","endLine":65,"endColumn":79},{"ruleId":"283","severity":1,"message":"284","line":81,"column":15,"nodeType":"278","endLine":81,"endColumn":83},{"ruleId":"283","severity":1,"message":"284","line":38,"column":23,"nodeType":"278","endLine":38,"endColumn":86},{"ruleId":"279","severity":1,"message":"289","line":60,"column":6,"nodeType":"281","endLine":60,"endColumn":20,"suggestions":"290"},{"ruleId":"283","severity":1,"message":"284","line":178,"column":19,"nodeType":"278","endLine":178,"endColumn":65},{"ruleId":"283","severity":1,"message":"284","line":39,"column":23,"nodeType":"278","endLine":39,"endColumn":86},{"ruleId":"283","severity":1,"message":"284","line":45,"column":19,"nodeType":"278","endLine":45,"endColumn":65},{"ruleId":"279","severity":1,"message":"285","line":14,"column":6,"nodeType":"281","endLine":14,"endColumn":8,"suggestions":"291"},{"ruleId":"279","severity":1,"message":"285","line":25,"column":6,"nodeType":"281","endLine":25,"endColumn":8,"suggestions":"292"},{"ruleId":"276","severity":1,"message":"277","line":105,"column":126,"nodeType":"278","endLine":105,"endColumn":178},{"ruleId":"279","severity":1,"message":"285","line":41,"column":6,"nodeType":"281","endLine":41,"endColumn":8,"suggestions":"293"},{"ruleId":"276","severity":1,"message":"277","line":219,"column":128,"nodeType":"278","endLine":219,"endColumn":180},{"ruleId":"276","severity":1,"message":"277","line":223,"column":117,"nodeType":"278","endLine":223,"endColumn":169},{"ruleId":"283","severity":1,"message":"284","line":38,"column":23,"nodeType":"278","endLine":38,"endColumn":86},{"ruleId":"279","severity":1,"message":"285","line":34,"column":6,"nodeType":"281","endLine":34,"endColumn":8,"suggestions":"294"},{"ruleId":"276","severity":1,"message":"277","line":46,"column":124,"nodeType":"278","endLine":46,"endColumn":176},{"ruleId":"283","severity":1,"message":"284","line":60,"column":19,"nodeType":"278","endLine":60,"endColumn":95},{"ruleId":"276","severity":1,"message":"277","line":73,"column":17,"nodeType":"278","endLine":73,"endColumn":66},{"ruleId":"276","severity":1,"message":"277","line":120,"column":13,"nodeType":"278","endLine":120,"endColumn":65},{"ruleId":"283","severity":1,"message":"284","line":217,"column":17,"nodeType":"278","endLine":217,"endColumn":72},{"ruleId":"283","severity":1,"message":"284","line":49,"column":45,"nodeType":"278","endLine":49,"endColumn":108},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchdata'. Either include it or remove the dependency array.","ArrayExpression",["295"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'clearCart', 'order.createdAt', and 'router.query.clearCart'. Either include them or remove the dependency array. If 'clearCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["297"],"React Hook useEffect has a missing dependency: 'router.events'. Either include it or remove the dependency array.",["298"],["299"],["300"],["301"],["302"],{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"305","fix":"311"},{"desc":"305","fix":"312"},{"desc":"305","fix":"313"},{"desc":"305","fix":"314"},"Update the dependencies array to be: [fetchdata]",{"range":"315","text":"316"},"Update the dependencies array to be: [router]",{"range":"317","text":"318"},"Update the dependencies array to be: [clearCart, order.createdAt, router.query.clearCart]",{"range":"319","text":"320"},"Update the dependencies array to be: [router.events, router.query]",{"range":"321","text":"322"},{"range":"323","text":"318"},{"range":"324","text":"318"},{"range":"325","text":"318"},{"range":"326","text":"318"},[1521,1523],"[fetchdata]",[677,679],"[router]",[796,798],"[clearCart, order.createdAt, router.query.clearCart]",[2108,2122],"[router.events, router.query]",[364,366],[764,766],[1486,1488],[936,938]]